{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Here are the contents of the documentation's Homepage.</p> <p>This site is only a demo for a Git action to publish Jupyter notebooks as Github pages.</p>"},{"location":"teste3/","title":"teste 3","text":"<p>dsfsdf</p>"},{"location":"notebooks/notebook-example/","title":"Example","text":"<p>Let's draw a graph from the Matplotlib collection!</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as colors\n\ndef rbf(x, y):\n    return 1.0 / (1 + 5* ((x ** 2) + (y ** 2)))\n\nN = 200\ngain = 8\nX, Y = np.mgrid[-3:3:complex(0, N), -2:2:complex(0, N)]\nZ1 = rbf(X + 0.5, Y + 0.5)\nZ2 = rbf(X - 0.5, Y - 0.5)\nZ = gain * Z1 - Z2\n\nshadeopts = {'cmap': 'PRGn', 'shading': 'gouraud'}\ncolormap = 'PRGn'\nlnrwidth = 0.5\n\nfig, ax = plt.subplots(2, 1, sharex=True, sharey=True)\n\npcm = ax[0].pcolormesh(X, Y, Z,\n                       norm=colors.SymLogNorm(linthresh=lnrwidth, linscale=1,\n                                              vmin=-gain, vmax=gain, base=10),\n                       **shadeopts)\nfig.colorbar(pcm, ax=ax[0], extend='both')\nax[0].text(-2.5, 1.5, 'symlog')\n\npcm = ax[1].pcolormesh(X, Y, Z, vmin=-gain, vmax=gain,\n                       **shadeopts)\nfig.colorbar(pcm, ax=ax[1], extend='both')\nax[1].text(-2.5, 1.5, 'linear')\n</code></pre> <pre><code>Text(-2.5, 1.5, 'linear')\n</code></pre>"},{"location":"notebooks/teste/","title":"teste 1","text":"<p>um teste qualquer</p>"},{"location":"notebooks/capitulo01/choropleth_maps_mapclassify/","title":"Choropleth maps mapclassify","text":"CD_MUN NM_MUN SIGLA_UF AREA_KM2 geometry     0 2100055 A\u00e7ail\u00e2ndia MA 5805.159 POLYGON ((-47.40208 -5.03469, -47.47673 -5.046...   1 2100105 Afonso Cunha MA 371.338 POLYGON ((-43.28145 -4.31924, -43.42924 -4.223...   2 2100154 \u00c1gua Doce do Maranh\u00e3o MA 442.292 POLYGON ((-42.17657 -2.84415, -42.17639 -2.844...   3 2100204 Alc\u00e2ntara MA 1167.964 MULTIPOLYGON (((-44.57175 -2.21957, -44.56274 ...   4 2100303 Aldeias Altas MA 1942.121 POLYGON ((-43.36510 -4.64627, -43.36676 -4.644...   ... ... ... ... ... ...   212 2112803 Viana MA 1166.745 POLYGON ((-45.01946 -3.27966, -45.01933 -3.279...   213 2112852 Vila Nova dos Mart\u00edrios MA 1190.008 POLYGON ((-48.11625 -5.26522, -48.11834 -5.265...   214 2112902 Vit\u00f3ria do Mearim MA 716.719 POLYGON ((-44.92336 -3.71341, -44.92354 -3.712...   215 2113009 Vitorino Freire MA 1193.385 POLYGON ((-45.26219 -4.13840, -45.26175 -4.139...   216 2114007 Z\u00e9 Doca MA 2140.109 POLYGON ((-45.66195 -3.33863, -45.66955 -3.338...    <p>217 rows \u00d7 5 columns</p>  <pre><code>EqualInterval\n\n      Interval         Count\n----------------------------\n[   79.21,  2691.60] |   190\n( 2691.60,  5303.99] |    17\n( 5303.99,  7916.38] |     5\n( 7916.38, 10528.77] |     3\n(10528.77, 13141.16] |     2\n\n\n\n\n\n\nQuantiles\n\n      Interval         Count\n----------------------------\n[   79.21,   447.17] |    44\n(  447.17,   743.53] |    43\n(  743.53,  1166.17] |    43\n( 1166.17,  1928.88] |    43\n( 1928.88, 13141.16] |    44\n\n\n\n\n\n\nJenksCaspall\n\n      Interval         Count\n----------------------------\n[   79.21,   591.62] |    63\n(  591.62,  1144.15] |    65\n( 1144.15,  2284.22] |    57\n( 2284.22,  4837.17] |    19\n( 4837.17, 13141.16] |    13\n</code></pre> <p>o natural breaks \u00e9 mais proximo desse aqui</p> <pre><code>FisherJenks\n\n      Interval         Count\n----------------------------\n[   79.21,  1193.38] |   136\n( 1193.38,  2720.27] |    55\n( 2720.27,  5201.93] |    16\n( 5201.93,  8861.72] |     8\n( 8861.72, 13141.16] |     2\n\n\n\n\n\n\nFisherJenks\n\n      Interval         Count\n----------------------------\n[   79.21,  1193.38] |   136\n( 1193.38,  2720.27] |    55\n( 2720.27,  5201.93] |    16\n( 5201.93,  8861.72] |     8\n( 8861.72, 13141.16] |     2\n\n\n\n\n\n\nmapclassify.classifiers.FisherJenks\n</code></pre>"},{"location":"notebooks/capitulo01/choropleth_maps_mapclassify/#referencias","title":"Refer\u00eancias","text":"<p>https://geographicdata.science/book/notebooks/05_choropleth.html</p>"},{"location":"notebooks/capitulo01/examplo_xarray/","title":"Examplo xarray","text":"<p>baixar e fazer upload deste dado esse dado https://zenodo.org/record/5123560/files/LUCCMEBR_land_cover_type_100km2_2000.nc?download=1</p>                <pre>&lt;xarray.Dataset&gt; Size: 15MB\nDimensions:  (time: 1, lon: 554, lat: 469)\nCoordinates:\n  * time     (time) float64 8B 0.0\n  * lon      (lon) float64 4kB -77.49 -77.41 -77.32 ... -31.57 -31.49 -31.41\n  * lat      (lat) float64 4kB -33.72 -33.63 -33.55 -33.47 ... 5.116 5.2 5.283\nData variables:\n    crs      int32 4B ...\n    veg      (time, lat, lon) float64 2MB ...\n    gveg     (time, lat, lon) float64 2MB ...\n    pastp    (time, lat, lon) float64 2MB ...\n    agric    (time, lat, lon) float64 2MB ...\n    mosc     (time, lat, lon) float64 2MB ...\n    fores    (time, lat, lon) float64 2MB ...\n    others   (time, lat, lon) float64 2MB ...\nAttributes:\n    CDI:                 Climate Data Interface version 1.9.2 (http://mpimet....\n    Conventions:         CF-1.5\n    GDAL_AREA_OR_POINT:  Area\n    GDAL:                GDAL 2.1.3, released 2017/20/01\n    CDO:                 Climate Data Operators version 1.9.2 (http://mpimet....\n    NCO:                 netCDF Operators version 4.8.1 (Homepage = http://nc...\n    LAND_COVER_TYPE:     veg (Forest vegetation), gveg (Grassland vegetation)...\n    history:             Thu Jul 22 16:15:02 2021: ncatted -a history,global,...</pre>xarray.Dataset<ul><li>Dimensions:<ul><li>time: 1</li><li>lon: 554</li><li>lat: 469</li></ul></li><li>Coordinates: (3)<ul><li>time(time)float640.0standard_name :timeunits :years since 2000-1-1 00:00:00calendar :proleptic_gregorianaxis :T<pre>array([0.])</pre></li><li>lon(lon)float64-77.49 -77.41 ... -31.49 -31.41standard_name :longitudelong_name :longitudeunits :degrees_eastaxis :X<pre>array([-77.489598, -77.406265, -77.322931, ..., -31.572933, -31.4896  ,\n       -31.406267])</pre></li><li>lat(lat)float64-33.72 -33.63 -33.55 ... 5.2 5.283standard_name :latitudelong_name :latitudeunits :degrees_northaxis :Y<pre>array([-33.716977, -33.633643, -33.55031 , ...,   5.116355,   5.199689,\n         5.283022])</pre></li></ul></li><li>Data variables: (8)<ul><li>crs()int32...grid_mapping_name :latitude_longitudelong_name :CRS definitionlongitude_of_prime_meridian :0.0semi_major_axis :6378137.0inverse_flattening :298.257223563spatial_ref :GEOGCS[\"WGS 84\",DATUM[\"unknown\",SPHEROID[\"WGS84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433]]GeoTransform :-77.53126480675263 0.08333333 0 5.324688572882689 0 -0.08333333 <pre>[1 values with dtype=int32]</pre></li><li>veg(time, lat, lon)float64...long_name :GDAL Band Number 1units :usogrid_mapping :crs<pre>[259826 values with dtype=float64]</pre></li><li>gveg(time, lat, lon)float64...long_name :GDAL Band Number 1units :usogrid_mapping :crs<pre>[259826 values with dtype=float64]</pre></li><li>pastp(time, lat, lon)float64...long_name :GDAL Band Number 1units :usogrid_mapping :crs<pre>[259826 values with dtype=float64]</pre></li><li>agric(time, lat, lon)float64...long_name :GDAL Band Number 1units :usogrid_mapping :crs<pre>[259826 values with dtype=float64]</pre></li><li>mosc(time, lat, lon)float64...long_name :GDAL Band Number 1units :usogrid_mapping :crs<pre>[259826 values with dtype=float64]</pre></li><li>fores(time, lat, lon)float64...long_name :GDAL Band Number 1units :usogrid_mapping :crs<pre>[259826 values with dtype=float64]</pre></li><li>others(time, lat, lon)float64...long_name :GDAL Band Number 1units :usogrid_mapping :crs<pre>[259826 values with dtype=float64]</pre></li></ul></li><li>Indexes: (3)<ul><li>timePandasIndex<pre>PandasIndex(Index([0.0], dtype='float64', name='time'))</pre></li><li>lonPandasIndex<pre>PandasIndex(Index([ -77.48959814175264,  -77.40626481175264,  -77.32293148175263,\n        -77.23959815175263,  -77.15626482175263,  -77.07293149175263,\n        -76.98959816175262,  -76.90626483175264,  -76.82293150175263,\n        -76.73959817175263,\n       ...\n       -32.156266621752636,  -32.07293329175263,  -31.98959996175263,\n        -31.90626663175263, -31.822933301752634, -31.739599971752632,\n        -31.65626664175263, -31.572933311752635, -31.489599981752633,\n        -31.40626665175263],\n      dtype='float64', name='lon', length=554))</pre></li><li>latPandasIndex<pre>PandasIndex(Index([ -33.71697653211731, -33.633643202117305,  -33.55030987211731,\n        -33.46697654211731, -33.383643212117306,  -33.30030988211731,\n        -33.21697655211731,  -33.13364322211731,  -33.05030989211731,\n        -32.96697656211731,\n       ...\n         4.533021937882687,   4.616355267882689,   4.699688597882691,\n         4.783021927882693,   4.866355257882688,    4.94968858788269,\n         5.033021917882692,   5.116355247882687,   5.199688577882689,\n         5.283021907882691],\n      dtype='float64', name='lat', length=469))</pre></li></ul></li><li>Attributes: (8)CDI :Climate Data Interface version 1.9.2 (http://mpimet.mpg.de/cdi)Conventions :CF-1.5GDAL_AREA_OR_POINT :AreaGDAL :GDAL 2.1.3, released 2017/20/01CDO :Climate Data Operators version 1.9.2 (http://mpimet.mpg.de/cdo)NCO :netCDF Operators version 4.8.1 (Homepage = http://nco.sf.net, Code = http://github.com/nco/nco)LAND_COVER_TYPE :veg (Forest vegetation), gveg (Grassland vegetation), pastp (Planted pasture), agric (Agriculture),mosc (Mosaic of occupation), fores(Forestry), others (Others)history :Thu Jul 22 16:15:02 2021: ncatted -a history,global,d,, LUCCMEBR_land_cover_type_100km2_2000.nc</li></ul>                /* CSS stylesheet for displaying xarray objects in jupyterlab.  *  */  :root {   --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));   --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));   --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));   --xr-border-color: var(--jp-border-color2, #e0e0e0);   --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);   --xr-background-color: var(--jp-layout-color0, white);   --xr-background-color-row-even: var(--jp-layout-color1, white);   --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee); }  html[theme=dark], body[data-theme=dark], body.vscode-dark {   --xr-font-color0: rgba(255, 255, 255, 1);   --xr-font-color2: rgba(255, 255, 255, 0.54);   --xr-font-color3: rgba(255, 255, 255, 0.38);   --xr-border-color: #1F1F1F;   --xr-disabled-color: #515151;   --xr-background-color: #111111;   --xr-background-color-row-even: #111111;   --xr-background-color-row-odd: #313131; }  .xr-wrap {   display: block !important;   min-width: 300px;   max-width: 700px; }  .xr-text-repr-fallback {   /* fallback to plain text repr when CSS is not injected (untrusted notebook) */   display: none; }  .xr-header {   padding-top: 6px;   padding-bottom: 6px;   margin-bottom: 4px;   border-bottom: solid 1px var(--xr-border-color); }  .xr-header &gt; div, .xr-header &gt; ul {   display: inline;   margin-top: 0;   margin-bottom: 0; }  .xr-obj-type, .xr-array-name {   margin-left: 2px;   margin-right: 10px; }  .xr-obj-type {   color: var(--xr-font-color2); }  .xr-sections {   padding-left: 0 !important;   display: grid;   grid-template-columns: 150px auto auto 1fr 20px 20px; }  .xr-section-item {   display: contents; }  .xr-section-item input {   display: none; }  .xr-section-item input + label {   color: var(--xr-disabled-color); }  .xr-section-item input:enabled + label {   cursor: pointer;   color: var(--xr-font-color2); }  .xr-section-item input:enabled + label:hover {   color: var(--xr-font-color0); }  .xr-section-summary {   grid-column: 1;   color: var(--xr-font-color2);   font-weight: 500; }  .xr-section-summary &gt; span {   display: inline-block;   padding-left: 0.5em; }  .xr-section-summary-in:disabled + label {   color: var(--xr-font-color2); }  .xr-section-summary-in + label:before {   display: inline-block;   content: '\u25ba';   font-size: 11px;   width: 15px;   text-align: center; }  .xr-section-summary-in:disabled + label:before {   color: var(--xr-disabled-color); }  .xr-section-summary-in:checked + label:before {   content: '\u25bc'; }  .xr-section-summary-in:checked + label &gt; span {   display: none; }  .xr-section-summary, .xr-section-inline-details {   padding-top: 4px;   padding-bottom: 4px; }  .xr-section-inline-details {   grid-column: 2 / -1; }  .xr-section-details {   display: none;   grid-column: 1 / -1;   margin-bottom: 5px; }  .xr-section-summary-in:checked ~ .xr-section-details {   display: contents; }  .xr-array-wrap {   grid-column: 1 / -1;   display: grid;   grid-template-columns: 20px auto; }  .xr-array-wrap &gt; label {   grid-column: 1;   vertical-align: top; }  .xr-preview {   color: var(--xr-font-color3); }  .xr-array-preview, .xr-array-data {   padding: 0 5px !important;   grid-column: 2; }  .xr-array-data, .xr-array-in:checked ~ .xr-array-preview {   display: none; }  .xr-array-in:checked ~ .xr-array-data, .xr-array-preview {   display: inline-block; }  .xr-dim-list {   display: inline-block !important;   list-style: none;   padding: 0 !important;   margin: 0; }  .xr-dim-list li {   display: inline-block;   padding: 0;   margin: 0; }  .xr-dim-list:before {   content: '('; }  .xr-dim-list:after {   content: ')'; }  .xr-dim-list li:not(:last-child):after {   content: ',';   padding-right: 5px; }  .xr-has-index {   font-weight: bold; }  .xr-var-list, .xr-var-item {   display: contents; }  .xr-var-item &gt; div, .xr-var-item label, .xr-var-item &gt; .xr-var-name span {   background-color: var(--xr-background-color-row-even);   margin-bottom: 0; }  .xr-var-item &gt; .xr-var-name:hover span {   padding-right: 5px; }  .xr-var-list &gt; li:nth-child(odd) &gt; div, .xr-var-list &gt; li:nth-child(odd) &gt; label, .xr-var-list &gt; li:nth-child(odd) &gt; .xr-var-name span {   background-color: var(--xr-background-color-row-odd); }  .xr-var-name {   grid-column: 1; }  .xr-var-dims {   grid-column: 2; }  .xr-var-dtype {   grid-column: 3;   text-align: right;   color: var(--xr-font-color2); }  .xr-var-preview {   grid-column: 4; }  .xr-index-preview {   grid-column: 2 / 5;   color: var(--xr-font-color2); }  .xr-var-name, .xr-var-dims, .xr-var-dtype, .xr-preview, .xr-attrs dt {   white-space: nowrap;   overflow: hidden;   text-overflow: ellipsis;   padding-right: 10px; }  .xr-var-name:hover, .xr-var-dims:hover, .xr-var-dtype:hover, .xr-attrs dt:hover {   overflow: visible;   width: auto;   z-index: 1; }  .xr-var-attrs, .xr-var-data, .xr-index-data {   display: none;   background-color: var(--xr-background-color) !important;   padding-bottom: 5px !important; }  .xr-var-attrs-in:checked ~ .xr-var-attrs, .xr-var-data-in:checked ~ .xr-var-data, .xr-index-data-in:checked ~ .xr-index-data {   display: block; }  .xr-var-data &gt; table {   float: right; }  .xr-var-name span, .xr-var-data, .xr-index-name div, .xr-index-data, .xr-attrs {   padding-left: 25px !important; }  .xr-attrs, .xr-var-attrs, .xr-var-data, .xr-index-data {   grid-column: 1 / -1; }  dl.xr-attrs {   padding: 0;   margin: 0;   display: grid;   grid-template-columns: 125px auto; }  .xr-attrs dt, .xr-attrs dd {   padding: 0;   margin: 0;   float: left;   padding-right: 10px;   width: auto; }  .xr-attrs dt {   font-weight: normal;   grid-column: 1; }  .xr-attrs dt:hover span {   display: inline-block;   background: var(--xr-background-color);   padding-right: 10px; }  .xr-attrs dd {   grid-column: 2;   white-space: pre-wrap;   word-break: break-all; }  .xr-icon-database, .xr-icon-file-text2, .xr-no-icon {   display: inline-block;   vertical-align: middle;   width: 1em;   height: 1.5em !important;   stroke-width: 0;   stroke: currentColor;   fill: currentColor; } <pre>&lt;xarray.DataArray 'lon' (lon: 554)&gt; Size: 4kB\narray([-77.489598, -77.406265, -77.322931, ..., -31.572933, -31.4896  ,\n       -31.406267])\nCoordinates:\n  * lon      (lon) float64 4kB -77.49 -77.41 -77.32 ... -31.57 -31.49 -31.41\nAttributes:\n    standard_name:  longitude\n    long_name:      longitude\n    units:          degrees_east\n    axis:           X</pre>xarray.DataArray'lon'<ul><li>lon: 554</li></ul><ul><li>-77.49 -77.41 -77.32 -77.24 -77.16 ... -31.66 -31.57 -31.49 -31.41<pre>array([-77.489598, -77.406265, -77.322931, ..., -31.572933, -31.4896  ,\n       -31.406267])</pre></li><li>Coordinates: (1)<ul><li>lon(lon)float64-77.49 -77.41 ... -31.49 -31.41standard_name :longitudelong_name :longitudeunits :degrees_eastaxis :X<pre>array([-77.489598, -77.406265, -77.322931, ..., -31.572933, -31.4896  ,\n       -31.406267])</pre></li></ul></li><li>Indexes: (1)<ul><li>lonPandasIndex<pre>PandasIndex(Index([ -77.48959814175264,  -77.40626481175264,  -77.32293148175263,\n        -77.23959815175263,  -77.15626482175263,  -77.07293149175263,\n        -76.98959816175262,  -76.90626483175264,  -76.82293150175263,\n        -76.73959817175263,\n       ...\n       -32.156266621752636,  -32.07293329175263,  -31.98959996175263,\n        -31.90626663175263, -31.822933301752634, -31.739599971752632,\n        -31.65626664175263, -31.572933311752635, -31.489599981752633,\n        -31.40626665175263],\n      dtype='float64', name='lon', length=554))</pre></li></ul></li><li>Attributes: (4)standard_name :longitudelong_name :longitudeunits :degrees_eastaxis :X</li></ul>                /* CSS stylesheet for displaying xarray objects in jupyterlab.  *  */  :root {   --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));   --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));   --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));   --xr-border-color: var(--jp-border-color2, #e0e0e0);   --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);   --xr-background-color: var(--jp-layout-color0, white);   --xr-background-color-row-even: var(--jp-layout-color1, white);   --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee); }  html[theme=dark], body[data-theme=dark], body.vscode-dark {   --xr-font-color0: rgba(255, 255, 255, 1);   --xr-font-color2: rgba(255, 255, 255, 0.54);   --xr-font-color3: rgba(255, 255, 255, 0.38);   --xr-border-color: #1F1F1F;   --xr-disabled-color: #515151;   --xr-background-color: #111111;   --xr-background-color-row-even: #111111;   --xr-background-color-row-odd: #313131; }  .xr-wrap {   display: block !important;   min-width: 300px;   max-width: 700px; }  .xr-text-repr-fallback {   /* fallback to plain text repr when CSS is not injected (untrusted notebook) */   display: none; }  .xr-header {   padding-top: 6px;   padding-bottom: 6px;   margin-bottom: 4px;   border-bottom: solid 1px var(--xr-border-color); }  .xr-header &gt; div, .xr-header &gt; ul {   display: inline;   margin-top: 0;   margin-bottom: 0; }  .xr-obj-type, .xr-array-name {   margin-left: 2px;   margin-right: 10px; }  .xr-obj-type {   color: var(--xr-font-color2); }  .xr-sections {   padding-left: 0 !important;   display: grid;   grid-template-columns: 150px auto auto 1fr 20px 20px; }  .xr-section-item {   display: contents; }  .xr-section-item input {   display: none; }  .xr-section-item input + label {   color: var(--xr-disabled-color); }  .xr-section-item input:enabled + label {   cursor: pointer;   color: var(--xr-font-color2); }  .xr-section-item input:enabled + label:hover {   color: var(--xr-font-color0); }  .xr-section-summary {   grid-column: 1;   color: var(--xr-font-color2);   font-weight: 500; }  .xr-section-summary &gt; span {   display: inline-block;   padding-left: 0.5em; }  .xr-section-summary-in:disabled + label {   color: var(--xr-font-color2); }  .xr-section-summary-in + label:before {   display: inline-block;   content: '\u25ba';   font-size: 11px;   width: 15px;   text-align: center; }  .xr-section-summary-in:disabled + label:before {   color: var(--xr-disabled-color); }  .xr-section-summary-in:checked + label:before {   content: '\u25bc'; }  .xr-section-summary-in:checked + label &gt; span {   display: none; }  .xr-section-summary, .xr-section-inline-details {   padding-top: 4px;   padding-bottom: 4px; }  .xr-section-inline-details {   grid-column: 2 / -1; }  .xr-section-details {   display: none;   grid-column: 1 / -1;   margin-bottom: 5px; }  .xr-section-summary-in:checked ~ .xr-section-details {   display: contents; }  .xr-array-wrap {   grid-column: 1 / -1;   display: grid;   grid-template-columns: 20px auto; }  .xr-array-wrap &gt; label {   grid-column: 1;   vertical-align: top; }  .xr-preview {   color: var(--xr-font-color3); }  .xr-array-preview, .xr-array-data {   padding: 0 5px !important;   grid-column: 2; }  .xr-array-data, .xr-array-in:checked ~ .xr-array-preview {   display: none; }  .xr-array-in:checked ~ .xr-array-data, .xr-array-preview {   display: inline-block; }  .xr-dim-list {   display: inline-block !important;   list-style: none;   padding: 0 !important;   margin: 0; }  .xr-dim-list li {   display: inline-block;   padding: 0;   margin: 0; }  .xr-dim-list:before {   content: '('; }  .xr-dim-list:after {   content: ')'; }  .xr-dim-list li:not(:last-child):after {   content: ',';   padding-right: 5px; }  .xr-has-index {   font-weight: bold; }  .xr-var-list, .xr-var-item {   display: contents; }  .xr-var-item &gt; div, .xr-var-item label, .xr-var-item &gt; .xr-var-name span {   background-color: var(--xr-background-color-row-even);   margin-bottom: 0; }  .xr-var-item &gt; .xr-var-name:hover span {   padding-right: 5px; }  .xr-var-list &gt; li:nth-child(odd) &gt; div, .xr-var-list &gt; li:nth-child(odd) &gt; label, .xr-var-list &gt; li:nth-child(odd) &gt; .xr-var-name span {   background-color: var(--xr-background-color-row-odd); }  .xr-var-name {   grid-column: 1; }  .xr-var-dims {   grid-column: 2; }  .xr-var-dtype {   grid-column: 3;   text-align: right;   color: var(--xr-font-color2); }  .xr-var-preview {   grid-column: 4; }  .xr-index-preview {   grid-column: 2 / 5;   color: var(--xr-font-color2); }  .xr-var-name, .xr-var-dims, .xr-var-dtype, .xr-preview, .xr-attrs dt {   white-space: nowrap;   overflow: hidden;   text-overflow: ellipsis;   padding-right: 10px; }  .xr-var-name:hover, .xr-var-dims:hover, .xr-var-dtype:hover, .xr-attrs dt:hover {   overflow: visible;   width: auto;   z-index: 1; }  .xr-var-attrs, .xr-var-data, .xr-index-data {   display: none;   background-color: var(--xr-background-color) !important;   padding-bottom: 5px !important; }  .xr-var-attrs-in:checked ~ .xr-var-attrs, .xr-var-data-in:checked ~ .xr-var-data, .xr-index-data-in:checked ~ .xr-index-data {   display: block; }  .xr-var-data &gt; table {   float: right; }  .xr-var-name span, .xr-var-data, .xr-index-name div, .xr-index-data, .xr-attrs {   padding-left: 25px !important; }  .xr-attrs, .xr-var-attrs, .xr-var-data, .xr-index-data {   grid-column: 1 / -1; }  dl.xr-attrs {   padding: 0;   margin: 0;   display: grid;   grid-template-columns: 125px auto; }  .xr-attrs dt, .xr-attrs dd {   padding: 0;   margin: 0;   float: left;   padding-right: 10px;   width: auto; }  .xr-attrs dt {   font-weight: normal;   grid-column: 1; }  .xr-attrs dt:hover span {   display: inline-block;   background: var(--xr-background-color);   padding-right: 10px; }  .xr-attrs dd {   grid-column: 2;   white-space: pre-wrap;   word-break: break-all; }  .xr-icon-database, .xr-icon-file-text2, .xr-no-icon {   display: inline-block;   vertical-align: middle;   width: 1em;   height: 1.5em !important;   stroke-width: 0;   stroke: currentColor;   fill: currentColor; } <pre>&lt;xarray.DataArray 'veg' (time: 1, lat: 469, lon: 554)&gt; Size: 2MB\n[259826 values with dtype=float64]\nCoordinates:\n  * time     (time) float64 8B 0.0\n  * lon      (lon) float64 4kB -77.49 -77.41 -77.32 ... -31.57 -31.49 -31.41\n  * lat      (lat) float64 4kB -33.72 -33.63 -33.55 -33.47 ... 5.116 5.2 5.283\nAttributes:\n    long_name:     GDAL Band Number 1\n    units:         uso\n    grid_mapping:  crs</pre>xarray.DataArray'veg'<ul><li>time: 1</li><li>lat: 469</li><li>lon: 554</li></ul><ul><li>...<pre>[259826 values with dtype=float64]</pre></li><li>Coordinates: (3)<ul><li>time(time)float640.0standard_name :timeunits :years since 2000-1-1 00:00:00calendar :proleptic_gregorianaxis :T<pre>array([0.])</pre></li><li>lon(lon)float64-77.49 -77.41 ... -31.49 -31.41standard_name :longitudelong_name :longitudeunits :degrees_eastaxis :X<pre>array([-77.489598, -77.406265, -77.322931, ..., -31.572933, -31.4896  ,\n       -31.406267])</pre></li><li>lat(lat)float64-33.72 -33.63 -33.55 ... 5.2 5.283standard_name :latitudelong_name :latitudeunits :degrees_northaxis :Y<pre>array([-33.716977, -33.633643, -33.55031 , ...,   5.116355,   5.199689,\n         5.283022])</pre></li></ul></li><li>Indexes: (3)<ul><li>timePandasIndex<pre>PandasIndex(Index([0.0], dtype='float64', name='time'))</pre></li><li>lonPandasIndex<pre>PandasIndex(Index([ -77.48959814175264,  -77.40626481175264,  -77.32293148175263,\n        -77.23959815175263,  -77.15626482175263,  -77.07293149175263,\n        -76.98959816175262,  -76.90626483175264,  -76.82293150175263,\n        -76.73959817175263,\n       ...\n       -32.156266621752636,  -32.07293329175263,  -31.98959996175263,\n        -31.90626663175263, -31.822933301752634, -31.739599971752632,\n        -31.65626664175263, -31.572933311752635, -31.489599981752633,\n        -31.40626665175263],\n      dtype='float64', name='lon', length=554))</pre></li><li>latPandasIndex<pre>PandasIndex(Index([ -33.71697653211731, -33.633643202117305,  -33.55030987211731,\n        -33.46697654211731, -33.383643212117306,  -33.30030988211731,\n        -33.21697655211731,  -33.13364322211731,  -33.05030989211731,\n        -32.96697656211731,\n       ...\n         4.533021937882687,   4.616355267882689,   4.699688597882691,\n         4.783021927882693,   4.866355257882688,    4.94968858788269,\n         5.033021917882692,   5.116355247882687,   5.199688577882689,\n         5.283021907882691],\n      dtype='float64', name='lat', length=469))</pre></li></ul></li><li>Attributes: (3)long_name :GDAL Band Number 1units :usogrid_mapping :crs</li></ul> <pre><code>&lt;matplotlib.collections.QuadMesh at 0x7f88447374c0&gt;\n</code></pre>  <pre><code>&lt;matplotlib.collections.QuadMesh at 0x7f8845e17880&gt;\n</code></pre>"},{"location":"notebooks/capitulo01/exemplo_netcdf/","title":"Exemplo netcdf","text":"<pre><code>&lt;class 'netCDF4._netCDF4.Dataset'&gt;\nroot group (NETCDF3_CLASSIC data model, file format NETCDF3):\n    CDI: Climate Data Interface version 1.9.2 (http://mpimet.mpg.de/cdi)\n    Conventions: CF-1.5\n    GDAL_AREA_OR_POINT: Area\n    GDAL: GDAL 2.1.3, released 2017/20/01\n    CDO: Climate Data Operators version 1.9.2 (http://mpimet.mpg.de/cdo)\n    NCO: netCDF Operators version 4.8.1 (Homepage = http://nco.sf.net, Code = http://github.com/nco/nco)\n    LAND_COVER_TYPE: veg (Forest vegetation), gveg (Grassland vegetation), pastp (Planted pasture), agric (Agriculture),mosc (Mosaic of occupation), fores(Forestry), others (Others)\n    history: Thu Jul 22 16:15:02 2021: ncatted -a history,global,d,, LUCCMEBR_land_cover_type_100km2_2000.nc\n    dimensions(sizes): time(1), lon(554), lat(469)\n    variables(dimensions): float64 time(time), float64 lon(lon), float64 lat(lat), int32 crs(), float64 veg(time, lat, lon), float64 gveg(time, lat, lon), float64 pastp(time, lat, lon), float64 agric(time, lat, lon), float64 mosc(time, lat, lon), float64 fores(time, lat, lon), float64 others(time, lat, lon)\n    groups:\n\n\n&lt;class 'netCDF4._netCDF4.Dimension'&gt; (unlimited): name = 'time', size = 1\n&lt;class 'netCDF4._netCDF4.Dimension'&gt;: name = 'lon', size = 554\n&lt;class 'netCDF4._netCDF4.Dimension'&gt;: name = 'lat', size = 469\n\n\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nfloat64 time(time)\n    standard_name: time\n    units: years since 2000-1-1 00:00:00\n    calendar: proleptic_gregorian\n    axis: T\nunlimited dimensions: time\ncurrent shape = (1,)\nfilling on, default _FillValue of 9.969209968386869e+36 used\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nfloat64 lon(lon)\n    standard_name: longitude\n    long_name: longitude\n    units: degrees_east\n    axis: X\nunlimited dimensions: \ncurrent shape = (554,)\nfilling on, default _FillValue of 9.969209968386869e+36 used\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nfloat64 lat(lat)\n    standard_name: latitude\n    long_name: latitude\n    units: degrees_north\n    axis: Y\nunlimited dimensions: \ncurrent shape = (469,)\nfilling on, default _FillValue of 9.969209968386869e+36 used\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nint32 crs()\n    grid_mapping_name: latitude_longitude\n    long_name: CRS definition\n    longitude_of_prime_meridian: 0.0\n    semi_major_axis: 6378137.0\n    inverse_flattening: 298.257223563\n    spatial_ref: GEOGCS[\"WGS 84\",DATUM[\"unknown\",SPHEROID[\"WGS84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433]]\n    GeoTransform: -77.53126480675263 0.08333333 0 5.324688572882689 0 -0.08333333 \nunlimited dimensions: \ncurrent shape = ()\nfilling on, default _FillValue of -2147483647 used\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nfloat64 veg(time, lat, lon)\n    long_name: GDAL Band Number 1\n    units: uso\n    grid_mapping: crs\n    _FillValue: 9.969209968386869e+36\n    missing_value: 9.969209968386869e+36\nunlimited dimensions: time\ncurrent shape = (1, 469, 554)\nfilling on\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nfloat64 gveg(time, lat, lon)\n    long_name: GDAL Band Number 1\n    units: uso\n    grid_mapping: crs\n    _FillValue: 9.969209968386869e+36\n    missing_value: 9.969209968386869e+36\nunlimited dimensions: time\ncurrent shape = (1, 469, 554)\nfilling on\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nfloat64 pastp(time, lat, lon)\n    long_name: GDAL Band Number 1\n    units: uso\n    grid_mapping: crs\n    _FillValue: 9.969209968386869e+36\n    missing_value: 9.969209968386869e+36\nunlimited dimensions: time\ncurrent shape = (1, 469, 554)\nfilling on\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nfloat64 agric(time, lat, lon)\n    long_name: GDAL Band Number 1\n    units: uso\n    grid_mapping: crs\n    _FillValue: 9.969209968386869e+36\n    missing_value: 9.969209968386869e+36\nunlimited dimensions: time\ncurrent shape = (1, 469, 554)\nfilling on\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nfloat64 mosc(time, lat, lon)\n    long_name: GDAL Band Number 1\n    units: uso\n    grid_mapping: crs\n    _FillValue: 9.969209968386869e+36\n    missing_value: 9.969209968386869e+36\nunlimited dimensions: time\ncurrent shape = (1, 469, 554)\nfilling on\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nfloat64 fores(time, lat, lon)\n    long_name: GDAL Band Number 1\n    units: uso\n    grid_mapping: crs\n    _FillValue: 9.969209968386869e+36\n    missing_value: 9.969209968386869e+36\nunlimited dimensions: time\ncurrent shape = (1, 469, 554)\nfilling on\n&lt;class 'netCDF4._netCDF4.Variable'&gt;\nfloat64 others(time, lat, lon)\n    long_name: GDAL Band Number 1\n    units: uso\n    grid_mapping: crs\n    _FillValue: 9.969209968386869e+36\n    missing_value: 9.969209968386869e+36\nunlimited dimensions: time\ncurrent shape = (1, 469, 554)\nfilling on\n\n\n[0.]\n</code></pre> <p>https://opensourceoptions.com/blog/intro-to-netcdf-with-python-netcdf4/</p>"},{"location":"notebooks/capitulo01/exemplos_queimadas_netcdf/","title":"Exemplos queimadas netcdf","text":"id lat lon data_hora_gmt satelite municipio estado pais municipio_id estado_id pais_id numero_dias_sem_chuva precipitacao risco_fogo bioma frp geom     0 f6aeae07-338b-312f-af16-ca506d1299aa -27.64000 -61.30000 2022-08-27 00:02:35 GOES-16 Fray Justo Santa Mar\u00eda de Oro Chaco Argentina 176 4 12 NaN NaN NaN NaN NaN 0101000020E61000006666666666A64EC0A4703D0AD7A3...   1 11763288-e14d-3b7d-8106-c86916b7c8bf -27.29000 -61.52000 2022-08-27 00:02:38 GOES-16 Doce de Octubre Chaco Argentina 175 4 12 NaN NaN NaN NaN NaN 0101000020E6100000C3F5285C8FC24EC00AD7A3703D4A...   2 82f1c0f4-8409-33d7-b6a7-fcece8a85ff9 -26.91000 -60.72000 2022-08-27 00:02:39 GOES-16 Independencia Chaco Argentina 180 4 12 NaN NaN NaN NaN NaN 0101000020E61000005C8FC2F5285C4EC0295C8FC2F5E8...   3 16f9393b-0fbc-3325-bb82-0ef3fa7cf7a5 -26.91000 -60.69000 2022-08-27 00:02:39 GOES-16 Independencia Chaco Argentina 180 4 12 NaN NaN NaN NaN NaN 0101000020E6100000B81E85EB51584EC0295C8FC2F5E8...   4 b86a6222-5850-38c1-a4f8-44362dc500ec -26.69000 -60.99000 2022-08-27 00:02:40 GOES-16 Independencia Chaco Argentina 180 4 12 NaN NaN NaN NaN NaN 0101000020E61000001F85EB51B87E4EC0713D0AD7A3B0...   ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...   175952 404dbe30-b609-3893-89d0-e50b205f58b1 63.33243 51.81817 2022-08-27 23:58:00 NOAA-20 Knyazhpogostskiy rayon Komi Russia 787 32 188 NaN NaN NaN NaN 1.4 0101000020E6100000BF4868CBB9E84940CA1AF5108DAA...   175953 d4011ff6-be0d-3559-a7bc-ae3f502a1231 63.31718 51.89207 2022-08-27 23:58:00 NOAA-20 Knyazhpogostskiy rayon Komi Russia 787 32 188 NaN NaN NaN NaN 1.0 0101000020E610000011DF89592FF24940FF78AF5A99A8...   175954 c4d79713-ef58-3b2c-a8b4-86c661a7129e 56.50157 42.40850 2022-08-27 23:58:00 NOAA-20 Yuzhskiy rayon Ivanovo Russia 530 19 188 NaN NaN NaN NaN 1.8 0101000020E61000003F355EBA49344540CE531D723340...   175955 97ec35c9-4280-3fd3-af67-dfe8338a37e2 55.08256 59.00667 2022-08-27 23:58:00 NOAA-20 Satkinskiy rayon Chelyabinsk Russia 345 11 188 NaN NaN NaN NaN 1.4 0101000020E6100000A2EE0390DA804D4098FA7953918A...   175956 6e06c154-10d5-3b41-b606-5f0b5e8eae45 52.22155 51.83440 2022-08-27 23:58:00 NOAA-20 Kurmanaevskiy rayon Orenburg Russia 1434 53 188 NaN NaN NaN NaN 1.4 0101000020E610000026E4839ECDEA4940E3361AC05B1C...    <p>175957 rows \u00d7 17 columns</p>             .colab-df-container {       display:flex;       flex-wrap:wrap;       gap: 12px;     }      .colab-df-convert {       background-color: #E8F0FE;       border: none;       border-radius: 50%;       cursor: pointer;       display: none;       fill: #1967D2;       height: 32px;       padding: 0 0 0 0;       width: 32px;     }      .colab-df-convert:hover {       background-color: #E2EBFA;       box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);       fill: #174EA6;     }      [theme=dark] .colab-df-convert {       background-color: #3B4455;       fill: #D2E3FC;     }      [theme=dark] .colab-df-convert:hover {       background-color: #434B5C;       box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);       filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));       fill: #FFFFFF;     }               .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     }      id lat lon data_hora_gmt satelite municipio estado pais municipio_id estado_id pais_id numero_dias_sem_chuva precipitacao risco_fogo bioma frp geom     0 f6aeae07-338b-312f-af16-ca506d1299aa -27.64 -61.30 2022-08-27 00:02:35 GOES-16 Fray Justo Santa Mar\u00eda de Oro Chaco Argentina 176 4 12 NaN NaN NaN NaN NaN 0101000020E61000006666666666A64EC0A4703D0AD7A3...   1 11763288-e14d-3b7d-8106-c86916b7c8bf -27.29 -61.52 2022-08-27 00:02:38 GOES-16 Doce de Octubre Chaco Argentina 175 4 12 NaN NaN NaN NaN NaN 0101000020E6100000C3F5285C8FC24EC00AD7A3703D4A...   2 82f1c0f4-8409-33d7-b6a7-fcece8a85ff9 -26.91 -60.72 2022-08-27 00:02:39 GOES-16 Independencia Chaco Argentina 180 4 12 NaN NaN NaN NaN NaN 0101000020E61000005C8FC2F5285C4EC0295C8FC2F5E8...   3 16f9393b-0fbc-3325-bb82-0ef3fa7cf7a5 -26.91 -60.69 2022-08-27 00:02:39 GOES-16 Independencia Chaco Argentina 180 4 12 NaN NaN NaN NaN NaN 0101000020E6100000B81E85EB51584EC0295C8FC2F5E8...   4 b86a6222-5850-38c1-a4f8-44362dc500ec -26.69 -60.99 2022-08-27 00:02:40 GOES-16 Independencia Chaco Argentina 180 4 12 NaN NaN NaN NaN NaN 0101000020E61000001F85EB51B87E4EC0713D0AD7A3B0...                .colab-df-container {       display:flex;       flex-wrap:wrap;       gap: 12px;     }      .colab-df-convert {       background-color: #E8F0FE;       border: none;       border-radius: 50%;       cursor: pointer;       display: none;       fill: #1967D2;       height: 32px;       padding: 0 0 0 0;       width: 32px;     }      .colab-df-convert:hover {       background-color: #E2EBFA;       box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);       fill: #174EA6;     }      [theme=dark] .colab-df-convert {       background-color: #3B4455;       fill: #D2E3FC;     }      [theme=dark] .colab-df-convert:hover {       background-color: #434B5C;       box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);       filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));       fill: #FFFFFF;     }             const buttonEl =           document.querySelector('#df-31394ed3-5b3a-4116-9c45-94123cf08765 button.colab-df-convert');         buttonEl.style.display =           google.colab.kernel.accessAllowed ? 'block' : 'none';          async function convertToInteractive(key) {           const element = document.querySelector('#df-31394ed3-5b3a-4116-9c45-94123cf08765');           const dataTable =             await google.colab.kernel.invokeFunction('convertToInteractive',                                                      [key], {});           if (!dataTable) return;            const docLinkHtml = 'Like what you see? Visit the ' +             '&lt;a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;'             + ' to learn more about interactive tables.';           element.innerHTML = '';           dataTable['output_type'] = 'display_data';           await google.colab.output.renderOutput(dataTable, element);           const docLink = document.createElement('div');           docLink.innerHTML = docLinkHtml;           element.appendChild(docLink);         }                  .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     }      lat lon municipio_id estado_id pais_id numero_dias_sem_chuva precipitacao risco_fogo frp     count 175957.000000 175957.000000 1.759570e+05 175957.000000 175957.000000 0.0 0.0 0.0 161352.000000   mean -5.435909 2.371150 5.449465e+05 12.830538 97.141017 NaN NaN NaN 13.702654   std 20.258356 57.297642 1.272728e+06 13.295504 89.542176 NaN NaN NaN 41.890273   min -50.743970 -179.324750 1.000000e+00 1.000000 1.000000 NaN NaN NaN 0.000000   25% -14.876290 -52.921080 2.600000e+01 5.000000 33.000000 NaN NaN NaN 3.100000   50% -10.915740 18.706920 8.500000e+01 8.000000 63.000000 NaN NaN NaN 6.100000   75% -5.421660 30.290930 7.430000e+02 15.000000 177.000000 NaN NaN NaN 12.600000   max 71.257990 177.769180 5.300108e+06 82.000000 256.000000 NaN NaN NaN 8345.700000                .colab-df-container {       display:flex;       flex-wrap:wrap;       gap: 12px;     }      .colab-df-convert {       background-color: #E8F0FE;       border: none;       border-radius: 50%;       cursor: pointer;       display: none;       fill: #1967D2;       height: 32px;       padding: 0 0 0 0;       width: 32px;     }      .colab-df-convert:hover {       background-color: #E2EBFA;       box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);       fill: #174EA6;     }      [theme=dark] .colab-df-convert {       background-color: #3B4455;       fill: #D2E3FC;     }      [theme=dark] .colab-df-convert:hover {       background-color: #434B5C;       box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);       filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));       fill: #FFFFFF;     }             const buttonEl =           document.querySelector('#df-cda0849d-6b4e-4a43-874a-c576c0d5f919 button.colab-df-convert');         buttonEl.style.display =           google.colab.kernel.accessAllowed ? 'block' : 'none';          async function convertToInteractive(key) {           const element = document.querySelector('#df-cda0849d-6b4e-4a43-874a-c576c0d5f919');           const dataTable =             await google.colab.kernel.invokeFunction('convertToInteractive',                                                      [key], {});           if (!dataTable) return;            const docLinkHtml = 'Like what you see? Visit the ' +             '&lt;a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;'             + ' to learn more about interactive tables.';           element.innerHTML = '';           dataTable['output_type'] = 'display_data';           await google.colab.output.renderOutput(dataTable, element);           const docLink = document.createElement('div');           docLink.innerHTML = docLinkHtml;           element.appendChild(docLink);         }          <pre><code>(50078, 3)\n\n\n\n\n\n\narray([[Timestamp('2022-08-27 00:02:35'), -27.64, -61.3],\n       [Timestamp('2022-08-27 00:02:38'), -27.29, -61.52],\n       [Timestamp('2022-08-27 00:02:39'), -26.91, -60.72],\n       ...,\n       [Timestamp('2022-08-27 23:55:07'), -3.34, -50.44],\n       [Timestamp('2022-08-27 23:55:07'), -3.28, -52.62],\n       [Timestamp('2022-08-27 23:55:56'), 3.96, -71.99]], dtype=object)\n\n\n\n/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: FutureWarning: The pandas.datetime class is deprecated and will be removed from pandas in a future version. Import from datetime module instead.\n\n\n\n\n---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-36-6d260fd3169a&gt; in &lt;module&gt;\n      4     return times\n      5 \n----&gt; 6 focos.T[0] = np.apply_along_axis(transform_time, 0, focos.T[0], units)\n\n\n&lt;__array_function__ internals&gt; in apply_along_axis(*args, **kwargs)\n\n\n/usr/local/lib/python3.7/dist-packages/numpy/lib/shape_base.py in apply_along_axis(func1d, axis, arr, *args, **kwargs)\n    377             'Cannot apply_along_axis when any iteration dimensions are 0'\n    378         ) from None\n--&gt; 379     res = asanyarray(func1d(inarr_view[ind0], *args, **kwargs))\n    380 \n    381     # build a buffer for storing evaluations of func1d.\n\n\n&lt;ipython-input-36-6d260fd3169a&gt; in transform_time(time, units)\n      1 def transform_time(time, units):\n----&gt; 2     times = pd.Series(time).dt.floor('d').astype(pd.datetime) # Trunca as datas para pegar apenas o dia em quest\u00e3o\n      3     times = nc.date2num(times, units, calendar='standard')\n      4     return times\n      5\n\n\n/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py in astype(self, dtype, copy, errors)\n   5813         else:\n   5814             # else, only a single dtype is given\n-&gt; 5815             new_data = self._mgr.astype(dtype=dtype, copy=copy, errors=errors)\n   5816             return self._constructor(new_data).__finalize__(self, method=\"astype\")\n   5817\n\n\n/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py in astype(self, dtype, copy, errors)\n    416 \n    417     def astype(self: T, dtype, copy: bool = False, errors: str = \"raise\") -&gt; T:\n--&gt; 418         return self.apply(\"astype\", dtype=dtype, copy=copy, errors=errors)\n    419 \n    420     def convert(\n\n\n/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py in apply(self, f, align_keys, ignore_failures, **kwargs)\n    325                     applied = b.apply(f, **kwargs)\n    326                 else:\n--&gt; 327                     applied = getattr(b, f)(**kwargs)\n    328             except (TypeError, NotImplementedError):\n    329                 if not ignore_failures:\n\n\n/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py in astype(self, dtype, copy, errors)\n    589         values = self.values\n    590 \n--&gt; 591         new_values = astype_array_safe(values, dtype, copy=copy, errors=errors)\n    592 \n    593         new_values = maybe_coerce_values(new_values)\n\n\n/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py in astype_array_safe(values, dtype, copy, errors)\n   1304         raise TypeError(msg)\n   1305 \n-&gt; 1306     dtype = pandas_dtype(dtype)\n   1307 \n   1308     try:\n\n\n/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/common.py in pandas_dtype(dtype)\n   1789         return npdtype\n   1790     elif npdtype.kind == \"O\":\n-&gt; 1791         raise TypeError(f\"dtype '{dtype}' not understood\")\n   1792 \n   1793     return npdtype\n\n\nTypeError: dtype '&lt;class 'datetime.datetime'&gt;' not understood\n</code></pre>"},{"location":"notebooks/capitulo01/rasterstats/","title":"Rasterstats","text":"<pre><code>Help on function gen_zonal_stats in module rasterstats.main:\n\ngen_zonal_stats(vectors, raster, layer=0, band=1, nodata=None, affine=None, stats=None, all_touched=False, categorical=False, category_map=None, add_stats=None, zone_func=None, raster_out=False, prefix=None, geojson_out=False, boundless=True, **kwargs)\n    Zonal statistics of raster values aggregated to vector geometries.\n\n    Parameters\n    ----------\n    vectors: path to an vector source or geo-like python objects\n\n    raster: ndarray or path to a GDAL raster source\n        If ndarray is passed, the ``affine`` kwarg is required.\n\n    layer: int or string, optional\n        If `vectors` is a path to a fiona source,\n        specify the vector layer to use either by name or number.\n        defaults to 0\n\n    band: int, optional\n        If `raster` is a GDAL source, the band number to use (counting from 1).\n        defaults to 1.\n\n    nodata: float, optional\n        If `raster` is a GDAL source, this value overrides any NODATA value\n        specified in the file's metadata.\n        If `None`, the file's metadata's NODATA value (if any) will be used.\n        defaults to `None`.\n\n    affine: Affine instance\n        required only for ndarrays, otherwise it is read from src\n\n    stats:  list of str, or space-delimited str, optional\n        Which statistics to calculate for each zone.\n        All possible choices are listed in ``utils.VALID_STATS``.\n        defaults to ``DEFAULT_STATS``, a subset of these.\n\n    all_touched: bool, optional\n        Whether to include every raster cell touched by a geometry, or only\n        those having a center point within the polygon.\n        defaults to `False`\n\n    categorical: bool, optional\n\n    category_map: dict\n        A dictionary mapping raster values to human-readable categorical names.\n        Only applies when categorical is True\n\n    add_stats: dict\n        with names and functions of additional stats to compute, optional\n\n    zone_func: callable\n        function to apply to zone ndarray prior to computing stats\n\n    raster_out: boolean\n        Include the masked numpy array for each feature?, optional\n\n        Each feature dictionary will have the following additional keys:\n        mini_raster_array: The clipped and masked numpy array\n        mini_raster_affine: Affine transformation\n        mini_raster_nodata: NoData Value\n\n    prefix: string\n        add a prefix to the keys (default: None)\n\n    geojson_out: boolean\n        Return list of GeoJSON-like features (default: False)\n        Original feature geometry and properties will be retained\n        with zonal stats appended as additional properties.\n        Use with `prefix` to ensure unique and meaningful property names.\n\n    boundless: boolean\n        Allow features that extend beyond the raster dataset\u2019s extent, default: True\n        Cells outside dataset extents are treated as nodata.\n\n    Returns\n    -------\n    generator of dicts (if geojson_out is False)\n        Each item corresponds to a single vector feature and\n        contains keys for each of the specified stats.\n\n    generator of geojson features (if geojson_out is True)\n        GeoJSON-like Feature as python dict\n</code></pre>       cell e_rivers e_urban100 id nome sigla regiao_id codigo_ibg geometry     0 https://purl.org/dbcells/epsg4326#R0_0830Cx-56... 1777.524580 164136.122159 3 Amazonas AM 3 13 POLYGON ((4758968.119 9768024.588, 4758959.715...   1 https://purl.org/dbcells/epsg4326#R0_0830Cx-56... 3628.358284 161992.829037 3 Amazonas AM 3 13 POLYGON ((4762068.947 9768028.795, 4761776.758...   2 https://purl.org/dbcells/epsg4326#R0_0830Cx-56... 378.771997 173107.116228 3 Amazonas AM 3 13 POLYGON ((4758968.119 9768024.588, 4749697.672...   3 https://purl.org/dbcells/epsg4326#R0_0830Cx-56... 3791.610418 171075.670935 3 Amazonas AM 3 13 POLYGON ((4758968.119 9768024.588, 4758975.150...   4 https://purl.org/dbcells/epsg4326#R0_0830Cx-56... 3129.890731 169521.668491 3 Amazonas AM 3 13 POLYGON ((4755097.895 9758797.630, 4753073.894...   ... ... ... ... ... ... ... ... ... ...   18937 https://purl.org/dbcells/epsg4326#R0_0830Cx-73... 133.422953 731267.517092 3 Amazonas AM 3 13 POLYGON ((2827623.774 9178968.901, 2828027.298...   18938 https://purl.org/dbcells/epsg4326#R0_0830Cx-73... 4301.511528 726837.164638 3 Amazonas AM 3 13 POLYGON ((2828027.298 9169223.143, 2828417.641...   18939 https://purl.org/dbcells/epsg4326#R0_0830Cx-73... 4563.802982 743937.341016 3 Amazonas AM 3 13 POLYGON ((2818110.219 9186224.890, 2817714.450...   18940 https://purl.org/dbcells/epsg4326#R0_0830Cx-73... 2920.221985 739454.813365 3 Amazonas AM 3 13 POLYGON ((2818829.576 9168832.056, 2814297.128...   18941 https://purl.org/dbcells/epsg4326#R0_0830Cx-73... 4566.003827 735070.365295 3 Amazonas AM 3 13 POLYGON ((2818829.576 9168832.056, 2819038.110...    <p>18942 rows \u00d7 9 columns</p>  <pre><code>---------------------------------------------------------------------------\n\nModuleNotFoundError                       Traceback (most recent call last)\n\nCell In[4], line 1\n----&gt; 1 import rioxarray\n\n\nModuleNotFoundError: No module named 'rioxarray'\n</code></pre>                /* CSS stylesheet for displaying xarray objects in jupyterlab.  *  */  :root {   --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));   --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));   --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));   --xr-border-color: var(--jp-border-color2, #e0e0e0);   --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);   --xr-background-color: var(--jp-layout-color0, white);   --xr-background-color-row-even: var(--jp-layout-color1, white);   --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee); }  html[theme=dark], body[data-theme=dark], body.vscode-dark {   --xr-font-color0: rgba(255, 255, 255, 1);   --xr-font-color2: rgba(255, 255, 255, 0.54);   --xr-font-color3: rgba(255, 255, 255, 0.38);   --xr-border-color: #1F1F1F;   --xr-disabled-color: #515151;   --xr-background-color: #111111;   --xr-background-color-row-even: #111111;   --xr-background-color-row-odd: #313131; }  .xr-wrap {   display: block !important;   min-width: 300px;   max-width: 700px; }  .xr-text-repr-fallback {   /* fallback to plain text repr when CSS is not injected (untrusted notebook) */   display: none; }  .xr-header {   padding-top: 6px;   padding-bottom: 6px;   margin-bottom: 4px;   border-bottom: solid 1px var(--xr-border-color); }  .xr-header &gt; div, .xr-header &gt; ul {   display: inline;   margin-top: 0;   margin-bottom: 0; }  .xr-obj-type, .xr-array-name {   margin-left: 2px;   margin-right: 10px; }  .xr-obj-type {   color: var(--xr-font-color2); }  .xr-sections {   padding-left: 0 !important;   display: grid;   grid-template-columns: 150px auto auto 1fr 20px 20px; }  .xr-section-item {   display: contents; }  .xr-section-item input {   display: none; }  .xr-section-item input + label {   color: var(--xr-disabled-color); }  .xr-section-item input:enabled + label {   cursor: pointer;   color: var(--xr-font-color2); }  .xr-section-item input:enabled + label:hover {   color: var(--xr-font-color0); }  .xr-section-summary {   grid-column: 1;   color: var(--xr-font-color2);   font-weight: 500; }  .xr-section-summary &gt; span {   display: inline-block;   padding-left: 0.5em; }  .xr-section-summary-in:disabled + label {   color: var(--xr-font-color2); }  .xr-section-summary-in + label:before {   display: inline-block;   content: '\u25ba';   font-size: 11px;   width: 15px;   text-align: center; }  .xr-section-summary-in:disabled + label:before {   color: var(--xr-disabled-color); }  .xr-section-summary-in:checked + label:before {   content: '\u25bc'; }  .xr-section-summary-in:checked + label &gt; span {   display: none; }  .xr-section-summary, .xr-section-inline-details {   padding-top: 4px;   padding-bottom: 4px; }  .xr-section-inline-details {   grid-column: 2 / -1; }  .xr-section-details {   display: none;   grid-column: 1 / -1;   margin-bottom: 5px; }  .xr-section-summary-in:checked ~ .xr-section-details {   display: contents; }  .xr-array-wrap {   grid-column: 1 / -1;   display: grid;   grid-template-columns: 20px auto; }  .xr-array-wrap &gt; label {   grid-column: 1;   vertical-align: top; }  .xr-preview {   color: var(--xr-font-color3); }  .xr-array-preview, .xr-array-data {   padding: 0 5px !important;   grid-column: 2; }  .xr-array-data, .xr-array-in:checked ~ .xr-array-preview {   display: none; }  .xr-array-in:checked ~ .xr-array-data, .xr-array-preview {   display: inline-block; }  .xr-dim-list {   display: inline-block !important;   list-style: none;   padding: 0 !important;   margin: 0; }  .xr-dim-list li {   display: inline-block;   padding: 0;   margin: 0; }  .xr-dim-list:before {   content: '('; }  .xr-dim-list:after {   content: ')'; }  .xr-dim-list li:not(:last-child):after {   content: ',';   padding-right: 5px; }  .xr-has-index {   font-weight: bold; }  .xr-var-list, .xr-var-item {   display: contents; }  .xr-var-item &gt; div, .xr-var-item label, .xr-var-item &gt; .xr-var-name span {   background-color: var(--xr-background-color-row-even);   margin-bottom: 0; }  .xr-var-item &gt; .xr-var-name:hover span {   padding-right: 5px; }  .xr-var-list &gt; li:nth-child(odd) &gt; div, .xr-var-list &gt; li:nth-child(odd) &gt; label, .xr-var-list &gt; li:nth-child(odd) &gt; .xr-var-name span {   background-color: var(--xr-background-color-row-odd); }  .xr-var-name {   grid-column: 1; }  .xr-var-dims {   grid-column: 2; }  .xr-var-dtype {   grid-column: 3;   text-align: right;   color: var(--xr-font-color2); }  .xr-var-preview {   grid-column: 4; }  .xr-index-preview {   grid-column: 2 / 5;   color: var(--xr-font-color2); }  .xr-var-name, .xr-var-dims, .xr-var-dtype, .xr-preview, .xr-attrs dt {   white-space: nowrap;   overflow: hidden;   text-overflow: ellipsis;   padding-right: 10px; }  .xr-var-name:hover, .xr-var-dims:hover, .xr-var-dtype:hover, .xr-attrs dt:hover {   overflow: visible;   width: auto;   z-index: 1; }  .xr-var-attrs, .xr-var-data, .xr-index-data {   display: none;   background-color: var(--xr-background-color) !important;   padding-bottom: 5px !important; }  .xr-var-attrs-in:checked ~ .xr-var-attrs, .xr-var-data-in:checked ~ .xr-var-data, .xr-index-data-in:checked ~ .xr-index-data {   display: block; }  .xr-var-data &gt; table {   float: right; }  .xr-var-name span, .xr-var-data, .xr-index-name div, .xr-index-data, .xr-attrs {   padding-left: 25px !important; }  .xr-attrs, .xr-var-attrs, .xr-var-data, .xr-index-data {   grid-column: 1 / -1; }  dl.xr-attrs {   padding: 0;   margin: 0;   display: grid;   grid-template-columns: 125px auto; }  .xr-attrs dt, .xr-attrs dd {   padding: 0;   margin: 0;   float: left;   padding-right: 10px;   width: auto; }  .xr-attrs dt {   font-weight: normal;   grid-column: 1; }  .xr-attrs dt:hover span {   display: inline-block;   background: var(--xr-background-color);   padding-right: 10px; }  .xr-attrs dd {   grid-column: 2;   white-space: pre-wrap;   word-break: break-all; }  .xr-icon-database, .xr-icon-file-text2, .xr-no-icon {   display: inline-block;   vertical-align: middle;   width: 1em;   height: 1.5em !important;   stroke-width: 0;   stroke: currentColor;   fill: currentColor; } <pre>&lt;xarray.DataArray (band: 1, y: 160, x: 229)&gt; Size: 293kB\n[36640 values with dtype=float64]\nCoordinates:\n  * band         (band) int64 8B 1\n  * x            (x) float64 2kB 2.824e+06 2.833e+06 ... 4.749e+06 4.758e+06\n  * y            (y) float64 1kB 1.025e+07 1.024e+07 ... 8.909e+06 8.901e+06\n    spatial_ref  int64 8B 0\nAttributes:\n    AREA_OR_POINT:  Area\n    _FillValue:     9.969209968386869e+36\n    scale_factor:   1.0\n    add_offset:     0.0</pre>xarray.DataArray<ul><li>band: 1</li><li>y: 160</li><li>x: 229</li></ul><ul><li>...<pre>[36640 values with dtype=float64]</pre></li><li>Coordinates: (4)<ul><li>band(band)int641<pre>array([1])</pre></li><li>x(x)float642.824e+06 2.833e+06 ... 4.758e+06<pre>array([2824244.464094, 2832725.686281, 2841206.908468, ..., 4741000.678432,\n       4749481.900619, 4757963.122806])</pre></li><li>y(y)float641.025e+07 1.024e+07 ... 8.901e+06<pre>array([10250840.626485, 10242348.430254, 10233856.234023, 10225364.037793,\n       10216871.841562, 10208379.645332, 10199887.449101, 10191395.25287 ,\n       10182903.05664 , 10174410.860409, 10165918.664178, 10157426.467948,\n       10148934.271717, 10140442.075487, 10131949.879256, 10123457.683025,\n       10114965.486795, 10106473.290564, 10097981.094333, 10089488.898103,\n       10080996.701872, 10072504.505642, 10064012.309411, 10055520.11318 ,\n       10047027.91695 , 10038535.720719, 10030043.524488, 10021551.328258,\n       10013059.132027, 10004566.935797,  9996074.739566,  9987582.543335,\n        9979090.347105,  9970598.150874,  9962105.954643,  9953613.758413,\n        9945121.562182,  9936629.365952,  9928137.169721,  9919644.97349 ,\n        9911152.77726 ,  9902660.581029,  9894168.384798,  9885676.188568,\n        9877183.992337,  9868691.796107,  9860199.599876,  9851707.403645,\n        9843215.207415,  9834723.011184,  9826230.814953,  9817738.618723,\n        9809246.422492,  9800754.226262,  9792262.030031,  9783769.8338  ,\n        9775277.63757 ,  9766785.441339,  9758293.245108,  9749801.048878,\n        9741308.852647,  9732816.656417,  9724324.460186,  9715832.263955,\n        9707340.067725,  9698847.871494,  9690355.675263,  9681863.479033,\n        9673371.282802,  9664879.086572,  9656386.890341,  9647894.69411 ,\n        9639402.49788 ,  9630910.301649,  9622418.105418,  9613925.909188,\n        9605433.712957,  9596941.516727,  9588449.320496,  9579957.124265,\n        9571464.928035,  9562972.731804,  9554480.535573,  9545988.339343,\n        9537496.143112,  9529003.946882,  9520511.750651,  9512019.55442 ,\n        9503527.35819 ,  9495035.161959,  9486542.965728,  9478050.769498,\n        9469558.573267,  9461066.377037,  9452574.180806,  9444081.984575,\n        9435589.788345,  9427097.592114,  9418605.395883,  9410113.199653,\n        9401621.003422,  9393128.807192,  9384636.610961,  9376144.41473 ,\n        9367652.2185  ,  9359160.022269,  9350667.826038,  9342175.629808,\n        9333683.433577,  9325191.237347,  9316699.041116,  9308206.844885,\n        9299714.648655,  9291222.452424,  9282730.256193,  9274238.059963,\n        9265745.863732,  9257253.667502,  9248761.471271,  9240269.27504 ,\n        9231777.07881 ,  9223284.882579,  9214792.686348,  9206300.490118,\n        9197808.293887,  9189316.097657,  9180823.901426,  9172331.705195,\n        9163839.508965,  9155347.312734,  9146855.116503,  9138362.920273,\n        9129870.724042,  9121378.527812,  9112886.331581,  9104394.13535 ,\n        9095901.93912 ,  9087409.742889,  9078917.546658,  9070425.350428,\n        9061933.154197,  9053440.957967,  9044948.761736,  9036456.565505,\n        9027964.369275,  9019472.173044,  9010979.976813,  9002487.780583,\n        8993995.584352,  8985503.388122,  8977011.191891,  8968518.99566 ,\n        8960026.79943 ,  8951534.603199,  8943042.406968,  8934550.210738,\n        8926058.014507,  8917565.818277,  8909073.622046,  8900581.425815])</pre></li><li>spatial_ref()int640crs_wkt :PROJCS[\"SIRGAS 2000 / Brazil Polyconic\",GEOGCS[\"SIRGAS 2000\",DATUM[\"Sistema_de_Referencia_Geocentrico_para_las_AmericaS_2000\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6674\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4674\"]],PROJECTION[\"Polyconic\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-54],PARAMETER[\"false_easting\",5000000],PARAMETER[\"false_northing\",10000000],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"5880\"]]spatial_ref :PROJCS[\"SIRGAS 2000 / Brazil Polyconic\",GEOGCS[\"SIRGAS 2000\",DATUM[\"Sistema_de_Referencia_Geocentrico_para_las_AmericaS_2000\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6674\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4674\"]],PROJECTION[\"Polyconic\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-54],PARAMETER[\"false_easting\",5000000],PARAMETER[\"false_northing\",10000000],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"5880\"]]GeoTransform :2820003.853 8481.222187336245 0.0 10255086.7246 0.0 -8492.196230625<pre>array(0)</pre></li></ul></li><li>Indexes: (3)<ul><li>bandPandasIndex<pre>PandasIndex(Index([1], dtype='int64', name='band'))</pre></li><li>xPandasIndex<pre>PandasIndex(Index([2824244.4640936684, 2832725.6862810045,  2841206.908468341,\n        2849688.130655677, 2858169.3528430136, 2866650.5750303497,\n       2875131.7972176857, 2883613.0194050223, 2892094.2415923583,\n       2900575.4637796944,\n       ...\n        4681632.123120306,  4690113.345307643,  4698594.567494978,\n        4707075.789682315,  4715557.011869651,  4724038.234056987,\n        4732519.456244323,   4741000.67843166, 4749481.9006189965,\n        4757963.122806332],\n      dtype='float64', name='x', length=229))</pre></li><li>yPandasIndex<pre>PandasIndex(Index([10250840.626484688, 10242348.430254063, 10233856.234023439,\n       10225364.037792813,  10216871.84156219, 10208379.645331563,\n       10199887.449100938, 10191395.252870314, 10182903.056639688,\n       10174410.860409064,\n       ...\n        8977011.191890938,  8968518.995660312,  8960026.799429689,\n        8951534.603199063,  8943042.406968439,  8934550.210737813,\n        8926058.014507188,  8917565.818276564,  8909073.622045938,\n        8900581.425815314],\n      dtype='float64', name='y', length=160))</pre></li></ul></li><li>Attributes: (4)AREA_OR_POINT :Area_FillValue :9.969209968386869e+36scale_factor :1.0add_offset :0.0</li></ul> <pre><code>Axes(0.292452,0.11;0.440096x0.77)\n</code></pre>  <pre><code>Tempo de execu\u00e7\u00e3o: 116.39122653007507 segundos\n\n\n\n\n\n[None,\n None,\n None,\n 0.0,\n None,\n None,\n 0.0,\n 0.0,\n None,\n 0.0,\n None,\n None,\n None,\n None,\n 0.0,\n 0.0,\n 0.0,\n 0.00875,\n 0.516875,\n None,\n None,\n 0.0,\n 0.0,\n 0.0,\n 0.0,\n 0.00875,\n 0.046875,\n 0.2503125,\n None,\n None,\n 0.03625,\n 0.0,\n 0.0,\n 0.0,\n 0.008125,\n 0.08125,\n 0.24828124999999998,\n 0.4153125,\n 0.5321875,\n 0.4496875,\n None,\n None,\n None,\n None,\n 0.0846875,\n 0.0096875,\n 0.0,\n 0.0,\n 0.0125,\n 0.06375,\n 0.150625,\n 0.2375,\n 0.19624999999999998,\n 0.2109375,\n 0.68,\n 0.8746875000000001,\n None,\n None,\n 0.29,\n 0.146875,\n 0.133125,\n 0.019375,\n 0.0,\n 0.0,\n 0.0175,\n 0.011875,\n 0.055,\n 0.098125,\n 0.1025,\n 0.115625,\n 0.413125,\n 0.756875,\n 0.819375,\n None,\n None,\n None,\n 0.29,\n 0.146875,\n 0.14,\n 0.019375,\n 0.0,\n 0.0,\n 0.0175,\n 0.011875,\n 0.055,\n 0.098125,\n 0.1025,\n 0.115625,\n 0.413125,\n 0.756875,\n 0.819375,\n 0.965,\n 0.841875,\n None,\n None,\n None,\n None,\n 0.53,\n 0.655625,\n 0.6475,\n 0.018125,\n 0.02,\n 0.0,\n 0.054375,\n 0.0125,\n 0.13749999999999998,\n 0.2625,\n 0.27875,\n 0.66,\n 0.193125,\n 0.784375,\n 0.93,\n 0.965,\n 0.841875,\n 0.621875,\n 0.8325,\n None,\n None,\n None,\n None,\n 0.11125,\n 0.934375,\n 0.97125,\n 0.879375,\n 0.04625,\n 0.05,\n 0.124375,\n 0.0,\n 0.071875,\n 0.14125000000000001,\n 0.210625,\n 0.063125,\n 0.75125,\n 0.7625,\n 0.838125,\n 0.983125,\n 0.706875,\n 0.611875,\n 0.990625,\n 1.0,\n 0.80875,\n 0.880625,\n 0.880625,\n None,\n None,\n 0.985625,\n 0.78125,\n 0.7703125,\n 0.9071875,\n 0.693125,\n 1.0,\n 1.0,\n 0.535,\n 0.074375,\n 0.1225,\n 0.001875,\n 0.03,\n 0.0784375,\n 0.126875,\n 0.058125,\n 0.415,\n 0.820625,\n 0.8684375,\n 0.810625,\n 0.44,\n 0.955625,\n 0.996875,\n 0.976875,\n 0.65875,\n 0.885,\n 0.885,\n 1.0,\n 1.0,\n None,\n None,\n 0.873125,\n 0.936875,\n 1.0,\n 1.0,\n 0.978125,\n 0.9703124999999999,\n 0.9842187499999999,\n 1.0,\n 0.63375,\n 0.22062500000000002,\n 0.093125,\n 0.0,\n 0.00796875,\n 0.0159375,\n 0.2371875,\n 0.274375,\n 0.5587500000000001,\n 0.6278125,\n 0.7440625000000001,\n 0.8503125,\n 0.958125,\n 1.0,\n 1.0,\n 0.9962500000000001,\n 0.5571875,\n 0.5571875,\n 0.8990625,\n 0.9296875,\n 1.0,\n 1.0,\n 1.0,\n None,\n 0.943125,\n 0.9225,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.995625,\n 0.426875,\n 0.14875,\n 0.0,\n 0.0,\n 0.0075,\n 0.015,\n 0.310625,\n 0.88875,\n 0.81875,\n 0.890625,\n 0.933125,\n 0.935625,\n 0.91875,\n 1.0,\n 1.0,\n 0.96125,\n 0.640625,\n 0.640625,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n None,\n None,\n 0.845,\n 0.990625,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.965625,\n 0.185,\n 0.314375,\n 0.0,\n 0.0,\n 0.0,\n 0.0,\n 0.21,\n 0.826875,\n 0.621875,\n 0.9640625,\n 0.946875,\n 0.94125,\n 0.925,\n 0.93125,\n 0.974375,\n 0.541875,\n 0.668125,\n 0.833125,\n 0.998125,\n 0.873125,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n None,\n None,\n 0.908125,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.813125,\n 0.189375,\n 0.401875,\n 0.0525,\n 0.0,\n 0.00875,\n 0.0175,\n 0.0,\n 0.5875,\n 0.326875,\n 0.1946875,\n 0.1775,\n 0.906875,\n 0.858125,\n 0.811875,\n 0.966875,\n 0.3,\n 0.579375,\n 0.6309374999999999,\n 0.6825,\n 0.503125,\n 0.686875,\n 0.841875,\n 0.955,\n 1.0,\n 0.98125,\n 0.89375,\n 1.0,\n 1.0,\n 0.9925,\n None,\n 0.913125,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.935,\n 0.213125,\n 0.11625,\n 0.274375,\n 0.366875,\n 0.18625,\n 0.005625,\n 0.0,\n 0.016875,\n 0.08125,\n 0.525625,\n 0.7525,\n 0.8075,\n 0.558125,\n 0.54375,\n 0.525625,\n 0.700625,\n 0.984375,\n 0.9728125000000001,\n 0.96125,\n 0.920625,\n 0.8725,\n 0.7975,\n 0.78,\n 0.7425,\n 0.68125,\n 0.975,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n None,\n 0.9446875000000001,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.98875,\n 0.825625,\n 0.099375,\n 0.0,\n 0.23375,\n 0.254375,\n 0.275,\n 0.20125,\n 0.0,\n 0.0,\n 0.2453125,\n 0.380625,\n 0.296875,\n 0.081875,\n 0.06625,\n 0.73125,\n 0.954375,\n 0.96625,\n 0.9484375,\n 0.930625,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.971875,\n 0.830625,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n None,\n None,\n None,\n None,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.9575,\n 0.276875,\n 0.0,\n 0.0,\n 0.08375,\n 0.1675,\n 0.604375,\n 0.0,\n 0.0,\n 0.20859375,\n 0.328125,\n 0.645625,\n 0.2546875,\n 0.3,\n 0.7915625,\n 0.941875,\n 0.9381250000000001,\n 0.8851562500000001,\n 0.8321875000000001,\n 0.9771875,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.9859374999999999,\n 0.8987499999999999,\n 0.9203125,\n 0.9953125,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n None,\n None,\n None,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.9575,\n 0.276875,\n 0.0,\n 0.0,\n 0.08375,\n 0.1675,\n 0.604375,\n 0.0,\n 0.0,\n 0.20859375,\n 0.328125,\n 0.645625,\n 0.2546875,\n 0.3,\n 0.7909375000000001,\n 0.929375,\n 0.91,\n 0.821875,\n 0.73375,\n 0.954375,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.966875,\n 0.840625,\n 0.990625,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n None,\n None,\n None,\n 0.93625,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.9746874999999999,\n 0.294375,\n 0.000625,\n 0.0,\n 0.04515625,\n 0.0903125,\n 0.46125000000000005,\n 0.0084375,\n 0.00625,\n 0.13093749999999998,\n 0.1825,\n 0.661875,\n 0.41375,\n 0.5131249999999999,\n 0.7909375000000001,\n 0.929375,\n 0.91,\n 0.821875,\n 0.73375,\n 0.954375,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.966875,\n 0.840625,\n 0.990625,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n None,\n None,\n None,\n None,\n None,\n 0.8456250000000001,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.991875,\n 0.311875,\n 0.00125,\n 0.0,\n 0.0065625,\n 0.013125,\n 0.318125,\n 0.016875,\n 0.0125,\n 0.09,\n 0.089375,\n 0.329375,\n 0.4,\n 0.4925,\n 0.73,\n 0.8175,\n 0.78625,\n 0.6996875,\n 0.613125,\n 0.73375,\n 0.9421875,\n 0.995,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n None,\n None,\n 0.9603125000000001,\n 0.9521875,\n 0.9181250000000001,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.9903125,\n 0.988125,\n 0.880625,\n 0.61875,\n 0.24656250000000002,\n 0.18625,\n 0.0084375,\n 0.016875,\n 0.47875,\n 0.429375,\n 0.21375,\n 0.52125,\n 0.384375,\n 0.0675,\n 0.030625,\n 0.154375,\n 0.3375,\n 0.65375,\n 0.471875,\n 0.6546875,\n 0.8375,\n 0.93875,\n 0.9634375,\n 0.978125,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.968125,\n 0.9975,\n 1.0,\n 1.0,\n 1.0,\n None,\n None,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.985625,\n 0.4525,\n 0.538125,\n 0.6053124999999999,\n 0.459375,\n 0.645,\n 0.670625,\n 0.186875,\n 0.919375,\n 0.55578125,\n 0.465625,\n 0.056875,\n 0.1975,\n 0.22843750000000002,\n 0.46343749999999995,\n 0.6459375,\n 0.7324999999999999,\n 0.53625,\n 0.739375,\n 0.6875,\n 0.8384375,\n 0.903125,\n 0.8840625,\n 0.865,\n 0.953125,\n 0.9807812499999999,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.96625,\n 0.999375,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n None,\n None,\n None,\n None,\n None,\n 1.0,\n 0.913125,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.99875,\n 0.43875,\n 0.660625,\n 0.9525,\n 0.9762500000000001,\n 0.9675,\n 0.53625,\n 0.2875,\n 0.83375,\n 0.915625,\n 0.695,\n 0.474375,\n 0.033125,\n 0.0,\n 0.1,\n 0.36,\n 0.14125,\n 0.263125,\n 0.535,\n 0.911875,\n 0.905625,\n 0.629375,\n 0.78375,\n 0.8709375,\n 0.958125,\n 0.949375,\n 0.979375,\n 0.95875,\n 0.9125,\n 1.0,\n 0.8015625,\n 0.8953125,\n 0.9225,\n 0.9390625,\n 0.9575,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n None,\n None,\n None,\n None,\n None,\n 0.61,\n 0.599375,\n 0.7275,\n None,\n None,\n None,\n None,\n 1.0,\n 0.980625,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.986875,\n 0.509375,\n 1.0,\n 1.0,\n 1.0,\n 0.86375,\n 0.39625,\n 0.92,\n 1.0,\n 0.988125,\n 0.885,\n 0.781875,\n 0.205625,\n 0.06875,\n 0.000625,\n 0.28375,\n 0.0925,\n 0.0825,\n 0.040625,\n 0.23125,\n 0.7425,\n 0.88625,\n 0.51,\n 0.6440625,\n 0.778125,\n 0.87875,\n 0.8765625,\n 0.820625,\n 0.93625,\n 1.0,\n 0.97375,\n 0.86375,\n 1.0,\n 1.0,\n 0.93875,\n 0.86875,\n 0.8828125,\n 0.9226562500000001,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.96375,\n 0.89125,\n None,\n None,\n None,\n 0.715,\n 0.849375,\n 0.98375,\n 1.0,\n 1.0,\n 0.9775,\n 0.89625,\n 0.886875,\n 0.773125,\n None,\n None,\n None,\n None,\n None,\n None,\n None,\n None,\n None,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.860625,\n 0.9375,\n 1.0,\n 1.0,\n 0.988125,\n 0.534375,\n 0.78625,\n 0.969375,\n 1.0,\n 1.0,\n 0.9525,\n 0.905,\n 0.774375,\n 0.15875,\n 0.010625,\n 0.1275,\n 0.124375,\n 0.018125,\n 0.0225,\n 0.4575,\n 0.8525,\n 0.966875,\n 0.530625,\n 0.696875,\n 0.863125,\n 0.63,\n 0.8425,\n 0.955625,\n 1.0,\n 1.0,\n 1.0,\n 0.849375,\n 0.990625,\n 1.0,\n 1.0,\n 1.0,\n 0.9690624999999999,\n 0.8982812499999999,\n 0.885,\n 0.949375,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.9921875,\n 0.9909375,\n 0.919375,\n 0.925625,\n None,\n None,\n 0.834375,\n 0.99875,\n 0.9993750000000001,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.756875,\n None,\n 0.844375,\n 0.97875,\n 0.923125,\n 0.8984375,\n 0.87375,\n 0.873125,\n None,\n None,\n None,\n None,\n None,\n None,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 1.0,\n 0.893125,\n 0.8275,\n 0.885,\n 0.891875,\n 0.8584375,\n 0.825,\n 0.865,\n 0.985,\n 1.0,\n ...]\n\n\n\n\n\n\n&lt;Axes: &gt;\n</code></pre>  <pre><code>[{'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 0.0},\n {'mean': None},\n {'mean': None},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': None},\n {'mean': 0.0},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.00875},\n {'mean': 0.516875},\n {'mean': None},\n {'mean': None},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.00875},\n {'mean': 0.046875},\n {'mean': 0.2503125},\n {'mean': None},\n {'mean': None},\n {'mean': 0.03625},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.008125},\n {'mean': 0.08125},\n {'mean': 0.24828124999999998},\n {'mean': 0.4153125},\n {'mean': 0.5321875},\n {'mean': 0.4496875},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 0.0846875},\n {'mean': 0.0096875},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.0125},\n {'mean': 0.06375},\n {'mean': 0.150625},\n {'mean': 0.2375},\n {'mean': 0.19624999999999998},\n {'mean': 0.2109375},\n {'mean': 0.68},\n {'mean': 0.8746875000000001},\n {'mean': None},\n {'mean': None},\n {'mean': 0.29},\n {'mean': 0.146875},\n {'mean': 0.133125},\n {'mean': 0.019375},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.0175},\n {'mean': 0.011875},\n {'mean': 0.055},\n {'mean': 0.098125},\n {'mean': 0.1025},\n {'mean': 0.115625},\n {'mean': 0.413125},\n {'mean': 0.756875},\n {'mean': 0.819375},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 0.29},\n {'mean': 0.146875},\n {'mean': 0.14},\n {'mean': 0.019375},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.0175},\n {'mean': 0.011875},\n {'mean': 0.055},\n {'mean': 0.098125},\n {'mean': 0.1025},\n {'mean': 0.115625},\n {'mean': 0.413125},\n {'mean': 0.756875},\n {'mean': 0.819375},\n {'mean': 0.965},\n {'mean': 0.841875},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 0.53},\n {'mean': 0.655625},\n {'mean': 0.6475},\n {'mean': 0.018125},\n {'mean': 0.02},\n {'mean': 0.0},\n {'mean': 0.054375},\n {'mean': 0.0125},\n {'mean': 0.13749999999999998},\n {'mean': 0.2625},\n {'mean': 0.27875},\n {'mean': 0.66},\n {'mean': 0.193125},\n {'mean': 0.784375},\n {'mean': 0.93},\n {'mean': 0.965},\n {'mean': 0.841875},\n {'mean': 0.621875},\n {'mean': 0.8325},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 0.11125},\n {'mean': 0.934375},\n {'mean': 0.97125},\n {'mean': 0.879375},\n {'mean': 0.04625},\n {'mean': 0.05},\n {'mean': 0.124375},\n {'mean': 0.0},\n {'mean': 0.071875},\n {'mean': 0.14125000000000001},\n {'mean': 0.210625},\n {'mean': 0.063125},\n {'mean': 0.75125},\n {'mean': 0.7625},\n {'mean': 0.838125},\n {'mean': 0.983125},\n {'mean': 0.706875},\n {'mean': 0.611875},\n {'mean': 0.990625},\n {'mean': 1.0},\n {'mean': 0.80875},\n {'mean': 0.880625},\n {'mean': 0.880625},\n {'mean': None},\n {'mean': None},\n {'mean': 0.985625},\n {'mean': 0.78125},\n {'mean': 0.7703125},\n {'mean': 0.9071875},\n {'mean': 0.693125},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.535},\n {'mean': 0.074375},\n {'mean': 0.1225},\n {'mean': 0.001875},\n {'mean': 0.03},\n {'mean': 0.0784375},\n {'mean': 0.126875},\n {'mean': 0.058125},\n {'mean': 0.415},\n {'mean': 0.820625},\n {'mean': 0.8684375},\n {'mean': 0.810625},\n {'mean': 0.44},\n {'mean': 0.955625},\n {'mean': 0.996875},\n {'mean': 0.976875},\n {'mean': 0.65875},\n {'mean': 0.885},\n {'mean': 0.885},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': 0.873125},\n {'mean': 0.936875},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.978125},\n {'mean': 0.9703124999999999},\n {'mean': 0.9842187499999999},\n {'mean': 1.0},\n {'mean': 0.63375},\n {'mean': 0.22062500000000002},\n {'mean': 0.093125},\n {'mean': 0.0},\n {'mean': 0.00796875},\n {'mean': 0.0159375},\n {'mean': 0.2371875},\n {'mean': 0.274375},\n {'mean': 0.5587500000000001},\n {'mean': 0.6278125},\n {'mean': 0.7440625000000001},\n {'mean': 0.8503125},\n {'mean': 0.958125},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9962500000000001},\n {'mean': 0.5571875},\n {'mean': 0.5571875},\n {'mean': 0.8990625},\n {'mean': 0.9296875},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': 0.943125},\n {'mean': 0.9225},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.995625},\n {'mean': 0.426875},\n {'mean': 0.14875},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.0075},\n {'mean': 0.015},\n {'mean': 0.310625},\n {'mean': 0.88875},\n {'mean': 0.81875},\n {'mean': 0.890625},\n {'mean': 0.933125},\n {'mean': 0.935625},\n {'mean': 0.91875},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.96125},\n {'mean': 0.640625},\n {'mean': 0.640625},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': 0.845},\n {'mean': 0.990625},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.965625},\n {'mean': 0.185},\n {'mean': 0.314375},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.21},\n {'mean': 0.826875},\n {'mean': 0.621875},\n {'mean': 0.9640625},\n {'mean': 0.946875},\n {'mean': 0.94125},\n {'mean': 0.925},\n {'mean': 0.93125},\n {'mean': 0.974375},\n {'mean': 0.541875},\n {'mean': 0.668125},\n {'mean': 0.833125},\n {'mean': 0.998125},\n {'mean': 0.873125},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': 0.908125},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.813125},\n {'mean': 0.189375},\n {'mean': 0.401875},\n {'mean': 0.0525},\n {'mean': 0.0},\n {'mean': 0.00875},\n {'mean': 0.0175},\n {'mean': 0.0},\n {'mean': 0.5875},\n {'mean': 0.326875},\n {'mean': 0.1946875},\n {'mean': 0.1775},\n {'mean': 0.906875},\n {'mean': 0.858125},\n {'mean': 0.811875},\n {'mean': 0.966875},\n {'mean': 0.3},\n {'mean': 0.579375},\n {'mean': 0.6309374999999999},\n {'mean': 0.6825},\n {'mean': 0.503125},\n {'mean': 0.686875},\n {'mean': 0.841875},\n {'mean': 0.955},\n {'mean': 1.0},\n {'mean': 0.98125},\n {'mean': 0.89375},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9925},\n {'mean': None},\n {'mean': 0.913125},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.935},\n {'mean': 0.213125},\n {'mean': 0.11625},\n {'mean': 0.274375},\n {'mean': 0.366875},\n {'mean': 0.18625},\n {'mean': 0.005625},\n {'mean': 0.0},\n {'mean': 0.016875},\n {'mean': 0.08125},\n {'mean': 0.525625},\n {'mean': 0.7525},\n {'mean': 0.8075},\n {'mean': 0.558125},\n {'mean': 0.54375},\n {'mean': 0.525625},\n {'mean': 0.700625},\n {'mean': 0.984375},\n {'mean': 0.9728125000000001},\n {'mean': 0.96125},\n {'mean': 0.920625},\n {'mean': 0.8725},\n {'mean': 0.7975},\n {'mean': 0.78},\n {'mean': 0.7425},\n {'mean': 0.68125},\n {'mean': 0.975},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': 0.9446875000000001},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.98875},\n {'mean': 0.825625},\n {'mean': 0.099375},\n {'mean': 0.0},\n {'mean': 0.23375},\n {'mean': 0.254375},\n {'mean': 0.275},\n {'mean': 0.20125},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.2453125},\n {'mean': 0.380625},\n {'mean': 0.296875},\n {'mean': 0.081875},\n {'mean': 0.06625},\n {'mean': 0.73125},\n {'mean': 0.954375},\n {'mean': 0.96625},\n {'mean': 0.9484375},\n {'mean': 0.930625},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.971875},\n {'mean': 0.830625},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9575},\n {'mean': 0.276875},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.08375},\n {'mean': 0.1675},\n {'mean': 0.604375},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.20859375},\n {'mean': 0.328125},\n {'mean': 0.645625},\n {'mean': 0.2546875},\n {'mean': 0.3},\n {'mean': 0.7915625},\n {'mean': 0.941875},\n {'mean': 0.9381250000000001},\n {'mean': 0.8851562500000001},\n {'mean': 0.8321875000000001},\n {'mean': 0.9771875},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9859374999999999},\n {'mean': 0.8987499999999999},\n {'mean': 0.9203125},\n {'mean': 0.9953125},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9575},\n {'mean': 0.276875},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.08375},\n {'mean': 0.1675},\n {'mean': 0.604375},\n {'mean': 0.0},\n {'mean': 0.0},\n {'mean': 0.20859375},\n {'mean': 0.328125},\n {'mean': 0.645625},\n {'mean': 0.2546875},\n {'mean': 0.3},\n {'mean': 0.7909375000000001},\n {'mean': 0.929375},\n {'mean': 0.91},\n {'mean': 0.821875},\n {'mean': 0.73375},\n {'mean': 0.954375},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.966875},\n {'mean': 0.840625},\n {'mean': 0.990625},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 0.93625},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9746874999999999},\n {'mean': 0.294375},\n {'mean': 0.000625},\n {'mean': 0.0},\n {'mean': 0.04515625},\n {'mean': 0.0903125},\n {'mean': 0.46125000000000005},\n {'mean': 0.0084375},\n {'mean': 0.00625},\n {'mean': 0.13093749999999998},\n {'mean': 0.1825},\n {'mean': 0.661875},\n {'mean': 0.41375},\n {'mean': 0.5131249999999999},\n {'mean': 0.7909375000000001},\n {'mean': 0.929375},\n {'mean': 0.91},\n {'mean': 0.821875},\n {'mean': 0.73375},\n {'mean': 0.954375},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.966875},\n {'mean': 0.840625},\n {'mean': 0.990625},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 0.8456250000000001},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.991875},\n {'mean': 0.311875},\n {'mean': 0.00125},\n {'mean': 0.0},\n {'mean': 0.0065625},\n {'mean': 0.013125},\n {'mean': 0.318125},\n {'mean': 0.016875},\n {'mean': 0.0125},\n {'mean': 0.09},\n {'mean': 0.089375},\n {'mean': 0.329375},\n {'mean': 0.4},\n {'mean': 0.4925},\n {'mean': 0.73},\n {'mean': 0.8175},\n {'mean': 0.78625},\n {'mean': 0.6996875},\n {'mean': 0.613125},\n {'mean': 0.73375},\n {'mean': 0.9421875},\n {'mean': 0.995},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': 0.9603125000000001},\n {'mean': 0.9521875},\n {'mean': 0.9181250000000001},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9903125},\n {'mean': 0.988125},\n {'mean': 0.880625},\n {'mean': 0.61875},\n {'mean': 0.24656250000000002},\n {'mean': 0.18625},\n {'mean': 0.0084375},\n {'mean': 0.016875},\n {'mean': 0.47875},\n {'mean': 0.429375},\n {'mean': 0.21375},\n {'mean': 0.52125},\n {'mean': 0.384375},\n {'mean': 0.0675},\n {'mean': 0.030625},\n {'mean': 0.154375},\n {'mean': 0.3375},\n {'mean': 0.65375},\n {'mean': 0.471875},\n {'mean': 0.6546875},\n {'mean': 0.8375},\n {'mean': 0.93875},\n {'mean': 0.9634375},\n {'mean': 0.978125},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.968125},\n {'mean': 0.9975},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.985625},\n {'mean': 0.4525},\n {'mean': 0.538125},\n {'mean': 0.6053124999999999},\n {'mean': 0.459375},\n {'mean': 0.645},\n {'mean': 0.670625},\n {'mean': 0.186875},\n {'mean': 0.919375},\n {'mean': 0.55578125},\n {'mean': 0.465625},\n {'mean': 0.056875},\n {'mean': 0.1975},\n {'mean': 0.22843750000000002},\n {'mean': 0.46343749999999995},\n {'mean': 0.6459375},\n {'mean': 0.7324999999999999},\n {'mean': 0.53625},\n {'mean': 0.739375},\n {'mean': 0.6875},\n {'mean': 0.8384375},\n {'mean': 0.903125},\n {'mean': 0.8840625},\n {'mean': 0.865},\n {'mean': 0.953125},\n {'mean': 0.9807812499999999},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.96625},\n {'mean': 0.999375},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 1.0},\n {'mean': 0.913125},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.99875},\n {'mean': 0.43875},\n {'mean': 0.660625},\n {'mean': 0.9525},\n {'mean': 0.9762500000000001},\n {'mean': 0.9675},\n {'mean': 0.53625},\n {'mean': 0.2875},\n {'mean': 0.83375},\n {'mean': 0.915625},\n {'mean': 0.695},\n {'mean': 0.474375},\n {'mean': 0.033125},\n {'mean': 0.0},\n {'mean': 0.1},\n {'mean': 0.36},\n {'mean': 0.14125},\n {'mean': 0.263125},\n {'mean': 0.535},\n {'mean': 0.911875},\n {'mean': 0.905625},\n {'mean': 0.629375},\n {'mean': 0.78375},\n {'mean': 0.8709375},\n {'mean': 0.958125},\n {'mean': 0.949375},\n {'mean': 0.979375},\n {'mean': 0.95875},\n {'mean': 0.9125},\n {'mean': 1.0},\n {'mean': 0.8015625},\n {'mean': 0.8953125},\n {'mean': 0.9225},\n {'mean': 0.9390625},\n {'mean': 0.9575},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 0.61},\n {'mean': 0.599375},\n {'mean': 0.7275},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 1.0},\n {'mean': 0.980625},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.986875},\n {'mean': 0.509375},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.86375},\n {'mean': 0.39625},\n {'mean': 0.92},\n {'mean': 1.0},\n {'mean': 0.988125},\n {'mean': 0.885},\n {'mean': 0.781875},\n {'mean': 0.205625},\n {'mean': 0.06875},\n {'mean': 0.000625},\n {'mean': 0.28375},\n {'mean': 0.0925},\n {'mean': 0.0825},\n {'mean': 0.040625},\n {'mean': 0.23125},\n {'mean': 0.7425},\n {'mean': 0.88625},\n {'mean': 0.51},\n {'mean': 0.6440625},\n {'mean': 0.778125},\n {'mean': 0.87875},\n {'mean': 0.8765625},\n {'mean': 0.820625},\n {'mean': 0.93625},\n {'mean': 1.0},\n {'mean': 0.97375},\n {'mean': 0.86375},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.93875},\n {'mean': 0.86875},\n {'mean': 0.8828125},\n {'mean': 0.9226562500000001},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.96375},\n {'mean': 0.89125},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 0.715},\n {'mean': 0.849375},\n {'mean': 0.98375},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9775},\n {'mean': 0.89625},\n {'mean': 0.886875},\n {'mean': 0.773125},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.860625},\n {'mean': 0.9375},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.988125},\n {'mean': 0.534375},\n {'mean': 0.78625},\n {'mean': 0.969375},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9525},\n {'mean': 0.905},\n {'mean': 0.774375},\n {'mean': 0.15875},\n {'mean': 0.010625},\n {'mean': 0.1275},\n {'mean': 0.124375},\n {'mean': 0.018125},\n {'mean': 0.0225},\n {'mean': 0.4575},\n {'mean': 0.8525},\n {'mean': 0.966875},\n {'mean': 0.530625},\n {'mean': 0.696875},\n {'mean': 0.863125},\n {'mean': 0.63},\n {'mean': 0.8425},\n {'mean': 0.955625},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.849375},\n {'mean': 0.990625},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9690624999999999},\n {'mean': 0.8982812499999999},\n {'mean': 0.885},\n {'mean': 0.949375},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.9921875},\n {'mean': 0.9909375},\n {'mean': 0.919375},\n {'mean': 0.925625},\n {'mean': None},\n {'mean': None},\n {'mean': 0.834375},\n {'mean': 0.99875},\n {'mean': 0.9993750000000001},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.756875},\n {'mean': None},\n {'mean': 0.844375},\n {'mean': 0.97875},\n {'mean': 0.923125},\n {'mean': 0.8984375},\n {'mean': 0.87375},\n {'mean': 0.873125},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': None},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 1.0},\n {'mean': 0.893125},\n {'mean': 0.8275},\n {'mean': 0.885},\n {'mean': 0.891875},\n {'mean': 0.8584375},\n {'mean': 0.825},\n {'mean': 0.865},\n {'mean': 0.985},\n {'mean': 1.0},\n ...]\n</code></pre>"},{"location":"notebooks/capitulo01/rasterstats/#calculando-centroides","title":"Calculando centroides","text":".dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     }      ADMIN geometry     0 Indonesia MULTIPOLYGON (((13102705.696 463877.598, 13102...   1 Malaysia MULTIPOLYGON (((13102705.696 463877.598, 13101...   2 Chile MULTIPOLYGON (((-7737827.685 -1979875.500, -77...   3 Bolivia POLYGON ((-7737827.685 -1979875.500, -7737828....   4 Peru MULTIPOLYGON (((-7737827.685 -1979875.500, -77...   ... ... ...   155 Taiwan MULTIPOLYGON (((13570488.501 2869616.777, 1356...   156 Japan MULTIPOLYGON (((14447401.267 3737037.331, 1444...   157 Iceland MULTIPOLYGON (((-1621215.732 9982883.495, -162...   158 Solomon Islands MULTIPOLYGON (((17867187.118 -1315679.987, 178...   159 Falkland Islands MULTIPOLYGON (((-6645155.487 -6837840.986, -66...    <p>160 rows \u00d7 2 columns</p>    <pre><code>&lt;Figure size 640x480 with 0 Axes&gt;\n</code></pre>"},{"location":"notebooks/capitulo01/models/gameoflife/","title":"Gameoflife","text":"<pre><code>Collecting contextily\n  Downloading contextily-1.5.0-py3-none-any.whl (17 kB)\nRequirement already satisfied: geopy in /usr/local/lib/python3.10/dist-packages (from contextily) (2.3.0)\nRequirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from contextily) (3.7.1)\nCollecting mercantile (from contextily)\n  Downloading mercantile-1.2.1-py3-none-any.whl (14 kB)\nRequirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from contextily) (9.4.0)\nCollecting rasterio (from contextily)\n  Downloading rasterio-1.3.9-cp310-cp310-manylinux2014_x86_64.whl (20.6 MB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m20.6/20.6 MB\u001b[0m \u001b[31m37.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from contextily) (2.31.0)\nRequirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from contextily) (1.3.2)\nRequirement already satisfied: xyzservices in /usr/local/lib/python3.10/dist-packages (from contextily) (2023.10.1)\nRequirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /usr/local/lib/python3.10/dist-packages (from geopy-&gt;contextily) (2.0)\nRequirement already satisfied: contourpy&gt;=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;contextily) (1.2.0)\nRequirement already satisfied: cycler&gt;=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;contextily) (0.12.1)\nRequirement already satisfied: fonttools&gt;=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;contextily) (4.49.0)\nRequirement already satisfied: kiwisolver&gt;=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;contextily) (1.4.5)\nRequirement already satisfied: numpy&gt;=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;contextily) (1.25.2)\nRequirement already satisfied: packaging&gt;=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;contextily) (23.2)\nRequirement already satisfied: pyparsing&gt;=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;contextily) (3.1.1)\nRequirement already satisfied: python-dateutil&gt;=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;contextily) (2.8.2)\nRequirement already satisfied: click&gt;=3.0 in /usr/local/lib/python3.10/dist-packages (from mercantile-&gt;contextily) (8.1.7)\nCollecting affine (from rasterio-&gt;contextily)\n  Downloading affine-2.4.0-py3-none-any.whl (15 kB)\nRequirement already satisfied: attrs in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;contextily) (23.2.0)\nRequirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;contextily) (2024.2.2)\nRequirement already satisfied: cligj&gt;=0.5 in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;contextily) (0.7.2)\nCollecting snuggs&gt;=1.4.1 (from rasterio-&gt;contextily)\n  Downloading snuggs-1.4.7-py3-none-any.whl (5.4 kB)\nRequirement already satisfied: click-plugins in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;contextily) (1.1.1)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;contextily) (67.7.2)\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;contextily) (3.3.2)\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;contextily) (3.6)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;contextily) (2.0.7)\nRequirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil&gt;=2.7-&gt;matplotlib-&gt;contextily) (1.16.0)\nInstalling collected packages: snuggs, mercantile, affine, rasterio, contextily\nSuccessfully installed affine-2.4.0 contextily-1.5.0 mercantile-1.2.1 rasterio-1.3.9 snuggs-1.4.7\nCollecting rioxarray\n  Downloading rioxarray-0.15.1-py3-none-any.whl (53 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m53.7/53.7 kB\u001b[0m \u001b[31m1.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from rioxarray) (23.2)\nRequirement already satisfied: rasterio&gt;=1.3 in /usr/local/lib/python3.10/dist-packages (from rioxarray) (1.3.9)\nRequirement already satisfied: xarray&gt;=2022.3.0 in /usr/local/lib/python3.10/dist-packages (from rioxarray) (2023.7.0)\nRequirement already satisfied: pyproj&gt;=3.3 in /usr/local/lib/python3.10/dist-packages (from rioxarray) (3.6.1)\nRequirement already satisfied: numpy&gt;=1.23 in /usr/local/lib/python3.10/dist-packages (from rioxarray) (1.25.2)\nRequirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from pyproj&gt;=3.3-&gt;rioxarray) (2024.2.2)\nRequirement already satisfied: affine in /usr/local/lib/python3.10/dist-packages (from rasterio&gt;=1.3-&gt;rioxarray) (2.4.0)\nRequirement already satisfied: attrs in /usr/local/lib/python3.10/dist-packages (from rasterio&gt;=1.3-&gt;rioxarray) (23.2.0)\nRequirement already satisfied: click&gt;=4.0 in /usr/local/lib/python3.10/dist-packages (from rasterio&gt;=1.3-&gt;rioxarray) (8.1.7)\nRequirement already satisfied: cligj&gt;=0.5 in /usr/local/lib/python3.10/dist-packages (from rasterio&gt;=1.3-&gt;rioxarray) (0.7.2)\nRequirement already satisfied: snuggs&gt;=1.4.1 in /usr/local/lib/python3.10/dist-packages (from rasterio&gt;=1.3-&gt;rioxarray) (1.4.7)\nRequirement already satisfied: click-plugins in /usr/local/lib/python3.10/dist-packages (from rasterio&gt;=1.3-&gt;rioxarray) (1.1.1)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from rasterio&gt;=1.3-&gt;rioxarray) (67.7.2)\nRequirement already satisfied: pandas&gt;=1.4 in /usr/local/lib/python3.10/dist-packages (from xarray&gt;=2022.3.0-&gt;rioxarray) (1.5.3)\nRequirement already satisfied: python-dateutil&gt;=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas&gt;=1.4-&gt;xarray&gt;=2022.3.0-&gt;rioxarray) (2.8.2)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas&gt;=1.4-&gt;xarray&gt;=2022.3.0-&gt;rioxarray) (2023.4)\nRequirement already satisfied: pyparsing&gt;=2.1.6 in /usr/local/lib/python3.10/dist-packages (from snuggs&gt;=1.4.1-&gt;rasterio&gt;=1.3-&gt;rioxarray) (3.1.1)\nRequirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil&gt;=2.8.1-&gt;pandas&gt;=1.4-&gt;xarray&gt;=2022.3.0-&gt;rioxarray) (1.16.0)\nInstalling collected packages: rioxarray\nSuccessfully installed rioxarray-0.15.1\nCollecting pysal\n  Downloading pysal-24.1-py3-none-any.whl (17 kB)\nCollecting libpysal&gt;=4.6.2 (from pysal)\n  Downloading libpysal-4.9.2-py3-none-any.whl (2.8 MB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m2.8/2.8 MB\u001b[0m \u001b[31m13.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting access&gt;=1.1.8 (from pysal)\n  Downloading access-1.1.9-py3-none-any.whl (21 kB)\nCollecting esda&gt;=2.4.1 (from pysal)\n  Downloading esda-2.5.1-py3-none-any.whl (132 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m132.4/132.4 kB\u001b[0m \u001b[31m15.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting giddy&gt;=2.3.3 (from pysal)\n  Downloading giddy-2.3.5-py3-none-any.whl (61 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m61.1/61.1 kB\u001b[0m \u001b[31m8.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting inequality&gt;=1.0.0 (from pysal)\n  Downloading inequality-1.0.1-py3-none-any.whl (15 kB)\nCollecting pointpats&gt;=2.2.0 (from pysal)\n  Downloading pointpats-2.4.0-py3-none-any.whl (58 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m58.4/58.4 kB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting segregation&gt;=2.3.1 (from pysal)\n  Downloading segregation-2.5-py3-none-any.whl (141 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m141.3/141.3 kB\u001b[0m \u001b[31m19.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting spaghetti&gt;=1.6.6 (from pysal)\n  Downloading spaghetti-1.7.5.post1-py3-none-any.whl (54 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m54.1/54.1 kB\u001b[0m \u001b[31m7.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting mgwr&gt;=2.1.2 (from pysal)\n  Downloading mgwr-2.2.1-py3-none-any.whl (47 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m47.9/47.9 kB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting momepy&gt;=0.5.3 (from pysal)\n  Downloading momepy-0.7.0-py3-none-any.whl (277 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m277.8/277.8 kB\u001b[0m \u001b[31m29.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting spglm&gt;=1.0.8 (from pysal)\n  Downloading spglm-1.1.0-py3-none-any.whl (41 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m41.4/41.4 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting spint&gt;=1.0.7 (from pysal)\n  Downloading spint-1.0.7.tar.gz (28 kB)\n  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\nCollecting spreg&gt;=1.2.4 (from pysal)\n  Downloading spreg-1.4.2-py3-none-any.whl (331 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m331.8/331.8 kB\u001b[0m \u001b[31m28.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting spvcm&gt;=0.3.0 (from pysal)\n  Downloading spvcm-0.3.0.tar.gz (5.7 MB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m5.7/5.7 MB\u001b[0m \u001b[31m54.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\nCollecting tobler&gt;=0.8.2 (from pysal)\n  Downloading tobler-0.11.2-py3-none-any.whl (34 kB)\nCollecting mapclassify&gt;=2.4.3 (from pysal)\n  Downloading mapclassify-2.6.1-py3-none-any.whl (38 kB)\nCollecting splot&gt;=1.1.5.post1 (from pysal)\n  Downloading splot-1.1.5.post1-py3-none-any.whl (39 kB)\nCollecting spopt&gt;=0.4.1 (from pysal)\n  Downloading spopt-0.6.0-py3-none-any.whl (244 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m244.5/244.5 kB\u001b[0m \u001b[31m26.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: geopandas in /usr/local/lib/python3.10/dist-packages (from access&gt;=1.1.8-&gt;pysal) (0.13.2)\nRequirement already satisfied: numpy&gt;=1.3 in /usr/local/lib/python3.10/dist-packages (from access&gt;=1.1.8-&gt;pysal) (1.25.2)\nRequirement already satisfied: pandas&gt;=0.23.4 in /usr/local/lib/python3.10/dist-packages (from access&gt;=1.1.8-&gt;pysal) (1.5.3)\nRequirement already satisfied: requests&gt;=2 in /usr/local/lib/python3.10/dist-packages (from access&gt;=1.1.8-&gt;pysal) (2.31.0)\nRequirement already satisfied: scikit-learn&gt;=1.0 in /usr/local/lib/python3.10/dist-packages (from esda&gt;=2.4.1-&gt;pysal) (1.2.2)\nRequirement already satisfied: scipy&gt;=1.9 in /usr/local/lib/python3.10/dist-packages (from esda&gt;=2.4.1-&gt;pysal) (1.11.4)\nCollecting quantecon&gt;=0.4.7 (from giddy&gt;=2.3.3-&gt;pysal)\n  Downloading quantecon-0.7.1-py3-none-any.whl (214 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m214.8/214.8 kB\u001b[0m \u001b[31m16.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: beautifulsoup4&gt;=4.10 in /usr/local/lib/python3.10/dist-packages (from libpysal&gt;=4.6.2-&gt;pysal) (4.12.3)\nRequirement already satisfied: packaging&gt;=22 in /usr/local/lib/python3.10/dist-packages (from libpysal&gt;=4.6.2-&gt;pysal) (23.2)\nRequirement already satisfied: platformdirs&gt;=2.0.2 in /usr/local/lib/python3.10/dist-packages (from libpysal&gt;=4.6.2-&gt;pysal) (4.2.0)\nRequirement already satisfied: shapely&gt;=2.0.1 in /usr/local/lib/python3.10/dist-packages (from libpysal&gt;=4.6.2-&gt;pysal) (2.0.3)\nRequirement already satisfied: networkx&gt;=2.7 in /usr/local/lib/python3.10/dist-packages (from mapclassify&gt;=2.4.3-&gt;pysal) (3.2.1)\nRequirement already satisfied: tqdm&gt;=4.63.0 in /usr/local/lib/python3.10/dist-packages (from momepy&gt;=0.5.3-&gt;pysal) (4.66.2)\nRequirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from pointpats&gt;=2.2.0-&gt;pysal) (3.7.1)\nCollecting deprecation (from segregation&gt;=2.3.1-&gt;pysal)\n  Downloading deprecation-2.1.0-py2.py3-none-any.whl (11 kB)\nRequirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from segregation&gt;=2.3.1-&gt;pysal) (1.3.2)\nRequirement already satisfied: seaborn in /usr/local/lib/python3.10/dist-packages (from segregation&gt;=2.3.1-&gt;pysal) (0.13.1)\nRequirement already satisfied: numba in /usr/local/lib/python3.10/dist-packages (from segregation&gt;=2.3.1-&gt;pysal) (0.58.1)\nRequirement already satisfied: pyproj&gt;=3 in /usr/local/lib/python3.10/dist-packages (from segregation&gt;=2.3.1-&gt;pysal) (3.6.1)\nCollecting rtree&gt;=1.0 (from spaghetti&gt;=1.6.6-&gt;pysal)\n  Downloading Rtree-1.2.0-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (535 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m535.2/535.2 kB\u001b[0m \u001b[31m43.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting pulp&gt;=2.7 (from spopt&gt;=0.4.1-&gt;pysal)\n  Downloading PuLP-2.8.0-py3-none-any.whl (17.7 MB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m17.7/17.7 MB\u001b[0m \u001b[31m34.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: rasterio in /usr/local/lib/python3.10/dist-packages (from tobler&gt;=0.8.2-&gt;pysal) (1.3.9)\nRequirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (from tobler&gt;=0.8.2-&gt;pysal) (0.14.1)\nCollecting rasterstats (from tobler&gt;=0.8.2-&gt;pysal)\n  Downloading rasterstats-0.19.0-py3-none-any.whl (16 kB)\nRequirement already satisfied: soupsieve&gt;1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4&gt;=4.10-&gt;libpysal&gt;=4.6.2-&gt;pysal) (2.5)\nRequirement already satisfied: fiona&gt;=1.8.19 in /usr/local/lib/python3.10/dist-packages (from geopandas-&gt;access&gt;=1.1.8-&gt;pysal) (1.9.5)\nRequirement already satisfied: python-dateutil&gt;=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas&gt;=0.23.4-&gt;access&gt;=1.1.8-&gt;pysal) (2.8.2)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas&gt;=0.23.4-&gt;access&gt;=1.1.8-&gt;pysal) (2023.4)\nRequirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from pyproj&gt;=3-&gt;segregation&gt;=2.3.1-&gt;pysal) (2024.2.2)\nRequirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from quantecon&gt;=0.4.7-&gt;giddy&gt;=2.3.3-&gt;pysal) (1.12)\nRequirement already satisfied: llvmlite&lt;0.42,&gt;=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba-&gt;segregation&gt;=2.3.1-&gt;pysal) (0.41.1)\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /usr/local/lib/python3.10/dist-packages (from requests&gt;=2-&gt;access&gt;=1.1.8-&gt;pysal) (3.3.2)\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in /usr/local/lib/python3.10/dist-packages (from requests&gt;=2-&gt;access&gt;=1.1.8-&gt;pysal) (3.6)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests&gt;=2-&gt;access&gt;=1.1.8-&gt;pysal) (2.0.7)\nRequirement already satisfied: threadpoolctl&gt;=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn&gt;=1.0-&gt;esda&gt;=2.4.1-&gt;pysal) (3.3.0)\nRequirement already satisfied: contourpy&gt;=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;pointpats&gt;=2.2.0-&gt;pysal) (1.2.0)\nRequirement already satisfied: cycler&gt;=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;pointpats&gt;=2.2.0-&gt;pysal) (0.12.1)\nRequirement already satisfied: fonttools&gt;=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;pointpats&gt;=2.2.0-&gt;pysal) (4.49.0)\nRequirement already satisfied: kiwisolver&gt;=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;pointpats&gt;=2.2.0-&gt;pysal) (1.4.5)\nRequirement already satisfied: pillow&gt;=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;pointpats&gt;=2.2.0-&gt;pysal) (9.4.0)\nRequirement already satisfied: pyparsing&gt;=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib-&gt;pointpats&gt;=2.2.0-&gt;pysal) (3.1.1)\nRequirement already satisfied: affine in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;tobler&gt;=0.8.2-&gt;pysal) (2.4.0)\nRequirement already satisfied: attrs in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;tobler&gt;=0.8.2-&gt;pysal) (23.2.0)\nRequirement already satisfied: click&gt;=4.0 in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;tobler&gt;=0.8.2-&gt;pysal) (8.1.7)\nRequirement already satisfied: cligj&gt;=0.5 in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;tobler&gt;=0.8.2-&gt;pysal) (0.7.2)\nRequirement already satisfied: snuggs&gt;=1.4.1 in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;tobler&gt;=0.8.2-&gt;pysal) (1.4.7)\nRequirement already satisfied: click-plugins in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;tobler&gt;=0.8.2-&gt;pysal) (1.1.1)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from rasterio-&gt;tobler&gt;=0.8.2-&gt;pysal) (67.7.2)\nCollecting simplejson (from rasterstats-&gt;tobler&gt;=0.8.2-&gt;pysal)\n  Downloading simplejson-3.19.2-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (137 kB)\n\u001b[2K     \u001b[90m\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u001b[0m \u001b[32m137.9/137.9 kB\u001b[0m \u001b[31m13.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: patsy&gt;=0.5.4 in /usr/local/lib/python3.10/dist-packages (from statsmodels-&gt;tobler&gt;=0.8.2-&gt;pysal) (0.5.6)\nRequirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from fiona&gt;=1.8.19-&gt;geopandas-&gt;access&gt;=1.1.8-&gt;pysal) (1.16.0)\nRequirement already satisfied: mpmath&gt;=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy-&gt;quantecon&gt;=0.4.7-&gt;giddy&gt;=2.3.3-&gt;pysal) (1.3.0)\nBuilding wheels for collected packages: spint, spvcm\n  Building wheel for spint (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Created wheel for spint: filename=spint-1.0.7-py3-none-any.whl size=31359 sha256=e6e02e36fc4afba4900df269f6700ee2b68abcd15d0e923a3a31ef8c6337fb2e\n  Stored in directory: /root/.cache/pip/wheels/f6/1d/ab/81b0c9d17a778a97ec078147cb11901afdab420c4894dcfbc5\n  Building wheel for spvcm (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Created wheel for spvcm: filename=spvcm-0.3.0-py3-none-any.whl size=5777183 sha256=9da2742a656842583e971bb16a79c13c78227fe6c8a723e94ac1f3db57e42b1b\n  Stored in directory: /root/.cache/pip/wheels/1c/58/6f/debcb62c0a142a6615a65f23217209b543b478d309edfa4e2b\nSuccessfully built spint spvcm\nInstalling collected packages: simplejson, rtree, pulp, deprecation, quantecon, rasterstats, mapclassify, libpysal, access, tobler, spreg, segregation, pointpats, momepy, inequality, esda, spvcm, spglm, spaghetti, giddy, spopt, splot, spint, mgwr, pysal\nSuccessfully installed access-1.1.9 deprecation-2.1.0 esda-2.5.1 giddy-2.3.5 inequality-1.0.1 libpysal-4.9.2 mapclassify-2.6.1 mgwr-2.2.1 momepy-0.7.0 pointpats-2.4.0 pulp-2.8.0 pysal-24.1 quantecon-0.7.1 rasterstats-0.19.0 rtree-1.2.0 segregation-2.5 simplejson-3.19.2 spaghetti-1.7.5.post1 spglm-1.1.0 spint-1.0.7 splot-1.1.5.post1 spopt-0.6.0 spreg-1.4.2 spvcm-0.3.0 tobler-0.11.2\n</code></pre>"},{"location":"notebooks/capitulo01/models/gameoflife/#spatial-weights","title":"Spatial weights","text":""},{"location":"notebooks/capitulo01/models/gameoflife/#contiguity-weights","title":"Contiguity weights","text":"<p>Criando poligonos</p>       geometry id past_value present_value     0 POLYGON ((0.00000 0.00000, 1.00000 0.00000, 1.... 0019 0 0   1 POLYGON ((1.00000 0.00000, 2.00000 0.00000, 2.... 0119 0 0   2 POLYGON ((2.00000 0.00000, 3.00000 0.00000, 3.... 0219 0 0   3 POLYGON ((3.00000 0.00000, 4.00000 0.00000, 4.... 0319 0 0   4 POLYGON ((4.00000 0.00000, 5.00000 0.00000, 5.... 0419 0 0   ... ... ... ... ...   395 POLYGON ((15.00000 19.00000, 16.00000 19.00000... 1500 0 0   396 POLYGON ((16.00000 19.00000, 17.00000 19.00000... 1600 0 0   397 POLYGON ((17.00000 19.00000, 18.00000 19.00000... 1700 0 0   398 POLYGON ((18.00000 19.00000, 19.00000 19.00000... 1800 0 0   399 POLYGON ((19.00000 19.00000, 20.00000 19.00000... 1900 0 0    <p>400 rows \u00d7 4 columns</p>  <pre><code>['0003', '0103', '0203', '0002', '0102', '0202', '0001', '0101', '0201']\n\n\n\n\n\n\n0      POLYGON ((0.00000 0.00000, 1.00000 0.00000, 1....\n1      POLYGON ((1.00000 0.00000, 2.00000 0.00000, 2....\n2      POLYGON ((2.00000 0.00000, 3.00000 0.00000, 3....\n3      POLYGON ((3.00000 0.00000, 4.00000 0.00000, 4....\n4      POLYGON ((4.00000 0.00000, 5.00000 0.00000, 5....\n                             ...                        \n395    POLYGON ((15.00000 19.00000, 16.00000 19.00000...\n396    POLYGON ((16.00000 19.00000, 17.00000 19.00000...\n397    POLYGON ((17.00000 19.00000, 18.00000 19.00000...\n398    POLYGON ((18.00000 19.00000, 19.00000 19.00000...\n399    POLYGON ((19.00000 19.00000, 20.00000 19.00000...\nLength: 400, dtype: geometry\n</code></pre>       .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     }      geometry past_value present_value   id        0019 POLYGON ((0.00000 0.00000, 1.00000 0.00000, 1.... 0 0   0119 POLYGON ((1.00000 0.00000, 2.00000 0.00000, 2.... 0 0   0219 POLYGON ((2.00000 0.00000, 3.00000 0.00000, 3.... 0 0   0319 POLYGON ((3.00000 0.00000, 4.00000 0.00000, 4.... 0 0   0419 POLYGON ((4.00000 0.00000, 5.00000 0.00000, 5.... 0 0   ... ... ... ...   1500 POLYGON ((15.00000 19.00000, 16.00000 19.00000... 0 0   1600 POLYGON ((16.00000 19.00000, 17.00000 19.00000... 0 0   1700 POLYGON ((17.00000 19.00000, 18.00000 19.00000... 0 0   1800 POLYGON ((18.00000 19.00000, 19.00000 19.00000... 0 0   1900 POLYGON ((19.00000 19.00000, 20.00000 19.00000... 0 0    <p>400 rows \u00d7 3 columns</p>  <pre><code>&lt;Axes: &gt;\n</code></pre>        .dataframe tbody tr th:only-of-type {         vertical-align: middle;     }      .dataframe tbody tr th {         vertical-align: top;     }      .dataframe thead th {         text-align: right;     }      geometry past_value present_value value   id         0019 POLYGON ((0.00000 0.00000, 1.00000 0.00000, 1.... 0 0.0 NaN   0119 POLYGON ((1.00000 0.00000, 2.00000 0.00000, 2.... 0 0.0 NaN   0219 POLYGON ((2.00000 0.00000, 3.00000 0.00000, 3.... 0 0.0 NaN   0319 POLYGON ((3.00000 0.00000, 4.00000 0.00000, 4.... 0 0.0 NaN   0419 POLYGON ((4.00000 0.00000, 5.00000 0.00000, 5.... 0 0.0 NaN   ... ... ... ... ...   1700 POLYGON ((17.00000 19.00000, 18.00000 19.00000... 0 0.0 NaN   1800 POLYGON ((18.00000 19.00000, 19.00000 19.00000... 0 0.0 NaN   1900 POLYGON ((19.00000 19.00000, 20.00000 19.00000... 0 0.0 NaN   33 None 0 NaN NaN   0 None 0 NaN 1.0    <p>402 rows \u00d7 4 columns</p>  <pre><code>id\n0019    POLYGON ((0.00000 0.00000, 1.00000 0.00000, 1....\n0119    POLYGON ((1.00000 0.00000, 2.00000 0.00000, 2....\n0219    POLYGON ((2.00000 0.00000, 3.00000 0.00000, 3....\n0319    POLYGON ((3.00000 0.00000, 4.00000 0.00000, 4....\n0419    POLYGON ((4.00000 0.00000, 5.00000 0.00000, 5....\n                              ...                        \n1700    POLYGON ((17.00000 19.00000, 18.00000 19.00000...\n1800    POLYGON ((18.00000 19.00000, 19.00000 19.00000...\n1900    POLYGON ((19.00000 19.00000, 20.00000 19.00000...\n33                                                   None\n0                                                    None\nName: geometry, Length: 402, dtype: geometry\n\n\n\n\n\n\n(&lt;Figure size 640x480 with 1 Axes&gt;, &lt;Axes: &gt;)\n</code></pre>  <p>Veja em https://pysal.org/notebooks/lib/libpysal/weights.html</p> <pre><code>400\n\n\n\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0000 ['0101', '0100', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0101 ['0201', '0202', '0200', '0100', '0000', '0102', '0002', '0001']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0202 ['0101', '0201', '0203', '0301', '0303', '0302', '0102', '0103']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0303 ['0203', '0202', '0402', '0304', '0302', '0204', '0404', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0404 ['0504', '0304', '0505', '0303', '0405', '0503', '0305', '0403']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0505 ['0605', '0504', '0604', '0405', '0606', '0406', '0404', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0606 ['0507', '0705', '0707', '0605', '0706', '0505', '0607', '0506']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0707 ['0808', '0806', '0807', '0708', '0706', '0606', '0608', '0607']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0808 ['0809', '0707', '0807', '0709', '0708', '0907', '0909', '0908']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n0909 ['0809', '0808', '0910', '1010', '1009', '1008', '0908', '0810']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1010 ['0911', '1109', '0910', '1009', '1011', '0909', '1111', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1111 ['1210', '1212', '1010', '1211', '1011', '1012', '1112', '1110']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1212 ['1313', '1211', '1112', '1312', '1311', '1113', '1213', '1111']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1313 ['1412', '1314', '1212', '1214', '1312', '1413', '1213', '1414']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1414 ['1314', '1513', '1313', '1514', '1415', '1413', '1315', '1515']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1515 ['1615', '1516', '1616', '1514', '1415', '1416', '1414', '1614']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1616 ['1615', '1715', '1617', '1516', '1515', '1517', '1717', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1717 ['1816', '1818', '1718', '1617', '1616', '1618', '1817', '1716']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1818 ['1918', '1718', '1919', '1917', '1719', '1819', '1817', '1717']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n1919 ['1819', '1918', '1818']\n\n\n\n\n\n[(3, 4), (4, 0), (5, 72), (6, 0), (7, 0), (8, 324)]\n\n\n\n\n\n\n2\n\n\n\n\n\n\n0\n</code></pre>"}]}